(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{1236:function(s,n,a){"use strict";a.r(n);var e=a(4),t=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"k8s基础"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#k8s基础"}},[s._v("#")]),s._v(" k8s基础")]),s._v(" "),n("h2",{attrs:{id:"链接资料"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#链接资料"}},[s._v("#")]),s._v(" 链接资料")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://k8s.easydoc.net/docs/dRiQjyTY/28366845/6GiNOzyZ/nd7yOvdY",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://k8s.easydoc.net/docs/dRiQjyTY/28366845/6GiNOzyZ/nd7yOvdY"),n("OutboundLink")],1)]),s._v(" "),n("p",[n("a",{attrs:{href:"https://www.bilibili.com/video/BV1Tg411P7EB?p=2&spm_id_from=pageDriver&vd_source=5e49db0357b2bfad03172f1ac9f49df5",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.bilibili.com/video/BV1Tg411P7EB?p=2&spm_id_from=pageDriver&vd_source=5e49db0357b2bfad03172f1ac9f49df5"),n("OutboundLink")],1)]),s._v(" "),n("h3",{attrs:{id:"常用命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[s._v("#")]),s._v(" "),n("strong",[s._v("常用命令")])]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("# 部署应用\nkubectl apply -f app.yaml\n\n# 查看 deployment 中所有的信息\nkubectl get deployment\n\n# 查看 pod\nkubectl get pod -o wide\n\n# 查看 pod 详情\nkubectl describe pod pod-name\nkubectl describe service/\n\n# 查看 log  加-f实时查看  # tail -f app.log 实时查看app.log文件\nkubectl logs pod-name\n\n# 进入 Pod 容器终端， -c container-name 可以指定进入哪个容器。\nkubectl exec -it pod-name -- bash\n\n# 伸缩扩展副本，调整副本的数据，限制成5个 --replicas=5\nkubectl scale deployment test-k8s --replicas=5\n\n# 把集群内端口映射到节点，里面端口映射到外面端口\nkubectl port-forward pod-name 8090:8080\n\n# 查看历史\nkubectl rollout history deployment test-k8s\n# 回到上个版本\nkubectl rollout undo deployment test-k8s\n# 回到指定版本\nkubectl rollout undo deployment test-k8s --to-revision=2\n# 删除部署ku\nkubectl delete deployment test-k8s\n\n# 查看全部\nkubectl get all\n# 重新部署\nkubectl rollout restart deployment test-k8s\n# 命令修改镜像，--record 表示把这个命令记录到操作历史中\nkubectl set image deployment test-k8s test-k8s=ccr.ccs.tencentyun.com/k8s-tutorial/test-k8s:v2-with-error --record\n# 暂停运行，暂停后，对 deployment 的修改不会立刻生效，恢复后才应用设置\nkubectl rollout pause deployment test-k8s\n# 恢复\nkubectl rollout resume deployment test-k8s\n# 输出到文件\nkubectl get deployment test-k8s -o yaml >> app2.yaml\n# 删除全部资源\nkubectl delete all --all\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br")])]),n("ul",[n("li",[n("strong",[s._v("minikube")]),s._v("\n只是一个 K8S 集群模拟器，只有一个节点的集群，只为测试用，master 和 worker 都在一起")])]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("启动命令\nminikube start --kubernetes-version=v1.23.8\n\n# 查看节点。kubectl 是一个用来跟 K8S 集群进行交互的命令行工具\nkubectl get node\n\n# 停止集群\nminikube stop\n\n# 清空集群\nminikube delete --all\n\n# 安装集群可视化 Web UI 控制台\nminikube dashboard\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[n("a",{attrs:{href:"https://github.com/gzyunke/test-k8s.git",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/gzyunke/test-k8s.git"),n("OutboundLink")],1)]),s._v(" "),n("h3",{attrs:{id:"_1、部署pod应用-yaml-文件方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、部署pod应用-yaml-文件方式"}},[s._v("#")]),s._v(" "),n("strong",[s._v("1、部署pod应用 YAML 文件方式")])]),s._v(" "),n("p",[s._v("方式一：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("kubectl run testapp --image=ccr.ccs.tencentyun.com/k8s-tutorial/test-k8s:v1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("方式二：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v(" kubectl apply -f pod.yaml\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("# app.yaml  文件\napiVersion: v1\nkind: Pod\nmetadata:\n  name: test-pod\nspec:\n  # 定义容器，可以多个\n  containers:\n    - name: test-k8s # 容器名字\n      image: ccr.ccs.tencentyun.com/k8s-tutorial/test-k8s:v1 # 镜像\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("方式三：deployment创建多个pod")]),s._v(" "),n("p",[n("strong",[s._v("Deployment 通过 label 关联起来 Pods")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(789),alt:""}})]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v(" kubectl apply -f pod.yaml\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("# app.yaml\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  # 部署名字\n  name: test-k8s\nspec:\n  replicas: 2  # 2个pod\n  # 用来查找关联的 Pod，所有标签都匹配才行\n  selector:\n    matchLabels:\n      app: test-k8s\n  # 定义 Pod 相关数据\n  template:\n    metadata:\n      labels:\n        app: test-k8s\n    spec:\n      # 定义容器，可以多个\n      containers:\n        - name: test-k8s # 容器名字\n          image: ccr.ccs.tencentyun.com/k8s-tutorial/test-k8s:v1 # 镜像\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br")])]),n("h3",{attrs:{id:"_2、service"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、service"}},[s._v("#")]),s._v(" "),n("strong",[s._v("2、Service")])]),s._v(" "),n("p",[n("strong",[s._v("特性")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("Service 通过 label 关联对应的 Pod")])]),s._v(" "),n("li",[n("p",[s._v("Servcie 生命周期不跟 Pod 绑定，不会因为 Pod 重创改变 IP")])]),s._v(" "),n("li",[n("p",[s._v("提供了负载均衡功能，自动转发流量到不同 Pod")])]),s._v(" "),n("li",[n("p",[s._v("可对集群外部提供访问端口")])]),s._v(" "),n("li",[n("p",[s._v("集群内部可通过服务名字访问")])])]),s._v(" "),n("p",[n("strong",[s._v("其实就是通过service访问pod（因为pod要改变ip）service固定ip，通过service转发到pod提供负载均衡")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(790),alt:""}})]),s._v(" "),n("p",[s._v("创建pod，然后通过label和service关联上")]),s._v(" "),n("h3",{attrs:{id:"_3、statefuset"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、statefuset"}},[s._v("#")]),s._v(" "),n("strong",[s._v("3、StatefuSet")])]),s._v(" "),n("p",[n("strong",[s._v("什么是 StatefulSet")])]),s._v(" "),n("p",[s._v("StatefulSet 是用来管理有状态的应用，例如数据库。\n前面我们部署的应用，都是不需要存储数据，不需要记住状态的，可以随意扩充副本，每个副本都是一样的，可替代的。\n而像数据库、Redis 这类有状态的，则不能随意扩充副本。\nStatefulSet 会固定每个 Pod 的名字")]),s._v(" "),n("h4",{attrs:{id:"statefulset-特性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#statefulset-特性"}},[s._v("#")]),s._v(" "),n("strong",[s._v("StatefulSet 特性")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("Service 的 "),n("code",[s._v("CLUSTER-IP")]),s._v(" 是空的，Pod 名字也是固定的。")])]),s._v(" "),n("li",[n("p",[s._v("Pod 创建和销毁是有序的，创建是顺序的，销毁是逆序的。")])]),s._v(" "),n("li",[n("p",[s._v("Pod 重建不会改变名字，除了IP，所以不要用IP直连")])])]),s._v(" "),n("h3",{attrs:{id:"命名空间"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#命名空间"}},[s._v("#")]),s._v(" "),n("strong",[s._v("命名空间")])]),s._v(" "),n("p",[s._v("如果一个集群中部署了多个应用，所有应用都在一起，就不太好管理，也可以导致名字冲突等。\n我们可以使用 namespace 把应用划分到不同的命名空间，跟代码里的 namespace 是一个概念，只是为了划分空间。")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("# 创建命名空间\nkubectl create namespace testapp\n# 部署应用到指定的命名空间\nkubectl apply -f app.yml --namespace testapp\n# 查询命名空间下的所有pod\nkubectl get pod --namespace kube-system\n\nkubectl get ns  # 查看所有的命名空间\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("可以用 "),n("a",{attrs:{href:"https://github.com/ahmetb/kubectx",target:"_blank",rel:"noopener noreferrer"}},[s._v("kubens"),n("OutboundLink")],1),s._v(" 快速切换 namespace")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("# 切换命名空间\nkubens kube-system\n# 回到上个命名空间\nkubens -\n# 切换集群\nkubectx minikube\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("apiVersion: v1\nkind: Service\nmetadata:\n  name: test-k8s\nspec:\n  selector:\n    app: test-label-k8s\n  # 默认 ClusterIP 集群内可访问，NodePort 节点可访问，LoadBalancer 负载均衡模式（需要负载均衡器才可用）\n#  type: ClusterIP\n#  type: NodePort\n  type: NodePort\n  ports:\n    - port: 8080        # 本 Service 的端口\n      targetPort: 8080  # 容器端口\n#      nodePort: 31000   # 节点端口，范围固定 30000 ~ 32767\n\n# 1、先执行上面的app.yaml文件创建pod，然后通过test-k8s标签连接\n# 2、如果选择了NodePort，需要在下面加上nodePort端口，通过开放的31000端口访问\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("在整个的生命周期中，Pod会出现5种状态（相位），分别如下：\n\n● 挂起（Pending）：apiserver已经创建了pod资源对象，但他尚未被调度完成或者仍处于下载镜像的过程中。\n\n● 运行中（Running）：Pod已经被调度至某节点，并且所有容器都已经被kubectl创建完成\n\n● 成功（Succeeded）：Pod中的所有容器都已经成功终止并且不会重启\n\n● 失败（Failed）：所有容器都已经终止，但至少有一个容器终止失败，即容器返回了非0值得退出状态\n\n● 未知（Unknown）：apiServer无法正常获取到pod对象的状态信息，通常由网络通信失败所导致\n————————————————\n版权声明：本文为CSDN博主「Hud.」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/weixin_42309691/article/details/124134236\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h3",{attrs:{id:"job限制pod的时长"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#job限制pod的时长"}},[s._v("#")]),s._v(" "),n("strong",[s._v("job限制Pod的时长")])]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('apiVersion: batch/v1\nkind: Job\nmetadata:\n  name: job-2\n#  namespace: gzqid\nspec:\n  backoffLimit: 0  # 重试0次\n  activeDeadlineSeconds: 20  # 到达指定时长，Job 创建的所有的 Pod 都将被终止，然后下面的ttlSecondsAfterFinished就会删除job\n  ttlSecondsAfterFinished: 0  # 则 TTL 控制器在 Job 执行结束后，立刻就可以清理该 Job 及其 Pod\n  template:\n    spec:\n      containers:\n      - name: pi\n#        image: perl\n#        image: ccr.ccs.tencentyun.com/k8s-tutorial/test-k8s:v1\n        image: xdasd123sad\n#        command: ["perl",  "-Mbignum=bpi", "-wle", "print bpi(2000)"]\n      restartPolicy: Never\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])])])}),[],!1,null,null,null);n.default=t.exports},789:function(s,n,a){s.exports=a.p+"assets/img/2023052415033470.0715a5ef.png"},790:function(s,n,a){s.exports=a.p+"assets/img/2023052415033431.b1a0d027.png"}}]);