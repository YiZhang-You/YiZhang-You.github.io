(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{1197:function(s,e,n){"use strict";n.r(e);var a=n(4),r=Object(a.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h3",{attrs:{id:"redis-cluster集群配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis-cluster集群配置"}},[s._v("#")]),s._v(" "),e("strong",[s._v("redis-cluster集群配置")])]),s._v(" "),e("p",[e("a",{attrs:{href:"https://www.cnblogs.com/pyyu/p/9844093.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.cnblogs.com/pyyu/p/9844093.html"),e("OutboundLink")],1)]),s._v(" "),e("h4",{attrs:{id:"为什么要用redis-cluster"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么要用redis-cluster"}},[s._v("#")]),s._v(" "),e("strong",[s._v("为什么要用redis-cluster")])]),s._v(" "),e("ul",[e("li",[s._v("并发问题")])]),s._v(" "),e("div",{staticClass:"language-Plain Text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-plain"}},[e("code",[s._v("redis官方生成可以达到 10万/每秒,每秒执行10万条命令\n假如业务需要每秒100万的命令执行呢？\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("ul",[e("li",[s._v("数据量太大")])]),s._v(" "),e("div",{staticClass:"language-Plain Text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-plain"}},[e("code",[s._v("一台服务器内存正常是16~256G，假如你的业务需要500G内存，\n\n新浪微博作为世界上最大的redis存储，就超过1TB的数据，去哪买这么大的内存条？各大公司有自己的解决方案，推出各自的集群功能，核心思想都是将数据分片（sharding）存储在多个redis实例中，每一片就是一个redis实例。\n\n各大企业集群方案：\ntwemproxy由Twitter开源\nCodis由豌豆荚开发，基于GO和C开发\nredis-cluster官方3.0版本后的集群方案\n\n解决方案如下\n\n1、配置一个超级牛逼的计算机，超大内存，超强cpu，但是问题是。。。。\n2、正确的应该是考虑分布式，加机器，把数据分到不同的位置，分摊集中式的压力，一堆机器做一件事\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("h4",{attrs:{id:"客户端分片"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#客户端分片"}},[s._v("#")]),s._v(" "),e("strong",[s._v("客户端分片")])]),s._v(" "),e("p",[s._v("redis3.0集群采用P2P模式，完全去中心化，将redis所有的key分成了16384个槽位，每个redis实例负责一部分slot，集群中的所有信息通过节点数据交换而更新。")]),s._v(" "),e("div",{staticClass:"language-Plain Text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-plain"}},[e("code",[s._v("redis实例集群主要思想是将redis数据的key进行散列，通过hash函数特定的key会映射到指定的redis节点上\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("img",{attrs:{src:n(764),alt:""}})]),s._v(" "),e("h4",{attrs:{id:"数据分布方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据分布方式"}},[s._v("#")]),s._v(" "),e("strong",[s._v("数据分布方式")])]),s._v(" "),e("p",[s._v("分布式数据库首要解决把整个数据集按照分区规则映射到多个节点的问题，即把数据集划分到多个节点上，每个节点负责整个数据的一个子集。")]),s._v(" "),e("p",[s._v("常见的分区规则有哈希分区和顺序分区。"),e("code",[s._v("Redis Cluster")]),s._v("采用哈希分区规则，因此接下来会讨论哈希分区规则。")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("节点取余分区")])]),s._v(" "),e("li",[e("p",[s._v("一致性哈希分区")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("虚拟槽分区(redis-cluster采用的方式)")])])])]),s._v(" "),e("p",[s._v("1、顺序分区")]),s._v(" "),e("p",[e("img",{attrs:{src:n(765),alt:""}})]),s._v(" "),e("p",[s._v("2、哈希分区")]),s._v(" "),e("p",[e("img",{attrs:{src:n(766),alt:""}})]),s._v(" "),e("p",[s._v("例如按照节点取余的方式，分三个节点")]),s._v(" "),e("p",[s._v("1~100的数据对3取余，可以分为三类")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("余数为0")])]),s._v(" "),e("li",[e("p",[s._v("余数为1")])]),s._v(" "),e("li",[e("p",[s._v("余数为2")])])]),s._v(" "),e("p",[s._v("那么同样的分4个节点就是hash(key)%4")]),s._v(" "),e("p",[e("strong",[s._v("节点取余的优点是简单，客户端分片直接是哈希+取余")])]),s._v(" "),e("p",[s._v("3、虚拟槽分区")]),s._v(" "),e("p",[e("code",[s._v("Redis Cluster")]),s._v("采用虚拟槽分区")]),s._v(" "),e("p",[s._v("虚拟槽分区巧妙地使用了哈希空间，使用分散度良好的哈希函数把所有的数据映射到一个固定范围内的整数集合，整数定义为槽（slot）。")]),s._v(" "),e("p",[e("strong",[s._v("Redis Cluster槽的范围是0 ～ 16383。")])]),s._v(" "),e("p",[s._v("槽是集群内数据管理和迁移的基本单位。采用大范围的槽的主要目的是为了方便数据的拆分和集群的扩展，")]),s._v(" "),e("p",[e("strong",[s._v("每个节点负责一定数量的槽。")])]),s._v(" "),e("p",[e("img",{attrs:{src:n(767),alt:""}})]),s._v(" "),e("h4",{attrs:{id:"搭建redis-cluster示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#搭建redis-cluster示例"}},[s._v("#")]),s._v(" "),e("strong",[s._v("搭建redis cluster示例")])]),s._v(" "),e("p",[s._v("搭建集群分为几部")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("准备节点（几匹马儿）")])]),s._v(" "),e("li",[e("p",[s._v("节点通信（几匹马儿分配主从）")])]),s._v(" "),e("li",[e("p",[s._v("分配槽位给节点（slot分配给马儿）")])])]),s._v(" "),e("p",[s._v("redis-cluster集群架构")]),s._v(" "),e("div",{staticClass:"language-Plain Text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-plain"}},[e("code",[s._v("多个服务端，负责读写，彼此通信，redis指定了16384个槽。\n\n多匹马儿，负责运输数据，马儿分配16384个槽位，管理数据。\n\nruby的脚本自动就把分配槽位这事做了\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("1、准备几台redis服务器,并写配置脚本")])]),s._v(" "),e("div",{staticClass:"language-Plain Text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-plain"}},[e("code",[s._v("redis\n127.0.0.1:6379\n127.0.0.1:6380\n127.0.0.1:6381\n127.0.0.1:6382\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("redis_6379.conf")]),s._v(" "),e("div",{staticClass:"language-Plain Text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-plain"}},[e("code",[s._v('port 6379\ndaemonize yes\ndir "/data/6379"\nlogfile "6379.log"\ndbfilename "dump-6379.rdb"\ncluster-enabled yes   #开启集群模式\ncluster-config-file nodes-6379.conf　　#集群内部的配置文件\ncluster-require-full-coverage no　　#redis cluster需要16384个slot都正常的时候才能对外提供服务，换句话说，只要任何一个slot异常那么整个cluster不对外提供服务。 因此生产环境一般为no\n\n# 配置的时候去掉注释\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[s._v("redis_6380.conf/redis_6381.conf,/redis_6382.conf,因为只用该端口号就行了，所有用了替换，如果有不同需求在去对应的去修改。")]),s._v(" "),e("div",{staticClass:"language-Plain Text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-plain"}},[e("code",[s._v("[root@VM-4-9-centos redis-4.0.10]# sed s/6379/6380/g redis_6379.conf > redis_6380.conf\n[root@VM-4-9-centos redis-4.0.10]# sed s/6379/6381/g redis_6379.conf > redis_6381.conf\n[root@VM-4-9-centos redis-4.0.10]# sed s/6379/6382/g redis_6379.conf > redis_6382.conf\n\n# 确保每个配置文件中的端口修改！！\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("！redis支持多实例的功能，我们在单机演示集群搭建，需要6个实例，三个是主节点，三个是从节点，数量为6个节点才能保证高可用的集群。我们这里是示例只有4个2主2从")]),s._v(" "),e("p",[e("strong",[s._v("2、创建几个节点的实例")])]),s._v(" "),e("div",{staticClass:"language-Plain Text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-plain"}},[e("code",[s._v("[root@VM-4-9-centos redis-4.0.10]# redis-server redis_6379.conf\n[root@VM-4-9-centos redis-4.0.10]# redis-server redis_6380.conf\n[root@VM-4-9-centos redis-4.0.10]# redis-server redis_6381.conf\n[root@VM-4-9-centos redis-4.0.10]# redis-server redis_6382.conf\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("查看端口看是否启动成功")]),s._v(" "),e("div",{staticClass:"language-Plain Text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-plain"}},[e("code",[s._v("[root@VM-4-9-centos redis-4.0.10]# ps -ef|grep redis\nroot     30208     1  0 15:08 ?        00:00:00 redis-server *:6381 [cluster]\nroot     30378     1  0 15:08 ?        00:00:00 redis-server *:6382 [cluster]\nroot     30566     1  0 15:08 ?        00:00:00 redis-server *:6380 [cluster]\nroot     30970     1  0 15:08 ?        00:00:00 redis-server *:6379 [cluster]\nroot     31324 30283  0 15:08 pts/0    00:00:00 grep --color=auto redis\n\n# 启动成功并有cluster标识\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("虽然启动成功，但是此时集群还不可用（因为还没有分配槽位），可以通过登录redis查看")]),s._v(" "),e("div",{staticClass:"language-Plain Text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-plain"}},[e("code",[s._v("redis-cli -p 6379\n127.0.0.1:6379> set a a\n(error) CLUSTERDOWN Hash slot not served\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("3、配置ruby环境，来分配槽位")])]),s._v(" "),e("ol",[e("li",[e("p",[s._v("下载、编译、安装Ruby")])]),s._v(" "),e("li",[e("p",[s._v("安装rubygem redis第三方")])]),s._v(" "),e("li",[e("p",[s._v("安装redis-trib.rb命令")])])]),s._v(" "),e("p",[s._v("第一步，安装ruby(这些命令可以放入一个sh脚本文件里)")]),s._v(" "),e("div",{staticClass:"language-Plain Text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-plain"}},[e("code",[s._v("#下载ruby\nwget https://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.1.tar.gz\n\n#安装ruby\ntar -xvf ruby-2.3.1.tar.gz\ncd 解压名称\n./configure --prefix=/opt/ruby/\n\nmake && make install\n\n#准备一个ruby命令\n#准备一个gem软件包管理命令\n#拷贝ruby命令到path下/usr/local/ruby\ncp /opt/ruby/bin/ruby /usr/local/\ncp bin/gem /usr/local/bin\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[s._v("第二步，安装ruby gem 包管理工具")]),s._v(" "),e("div",{staticClass:"language-Plain Text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-plain"}},[e("code",[s._v("wget http://rubygems.org/downloads/redis-3.3.0.gem\n\ngem install -l redis-3.3.0.gem\n# 查看gem有哪些包\ngem list -- check redis gem\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("第三步，安装redis-trib.rb命令")]),s._v(" "),e("div",{staticClass:"language-Plain Text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-plain"}},[e("code",[s._v("[root@yugo /opt/redis/src 18:38:13]# cp /opt/redis/src/redis-trib.rb /usr/local/bin/\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("4、一键开启redis-cluster集群")])]),s._v(" "),e("div",{staticClass:"language-Plain Text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-plain"}},[e("code",[s._v("#每个主节点，有一个从节点，代表--replicas 1\nredis-trib.rb create --replicas 1 127.0.0.1:7000 127.0.0.1:7001 127.0.0.1:7002 127.0.0.1:7003 127.0.0.1:7004 127.0.0.1:7005\n\n#集群自动分配主从关系  7000、7001、7002为 7003、7004、7005 主动关系\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("由于服务器问题，后面的没有测试，后面可以看详细")]),e("a",{attrs:{href:"https://www.cnblogs.com/pyyu/p/9844093.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.cnblogs.com/pyyu/p/9844093.html"),e("OutboundLink")],1)]),s._v(" "),e("div",{staticClass:"language-Plain Text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-plain"}},[e("code",[s._v("dockerimgurl 拉取账号的密码\n\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])])])}),[],!1,null,null,null);e.default=r.exports},764:function(s,e,n){s.exports=n.p+"assets/img/2023052414253199.aea99831.png"},765:function(s,e,n){s.exports=n.p+"assets/img/202305241425333.545322de.png"},766:function(s,e,n){s.exports=n.p+"assets/img/2023052414253536.b4c48cc6.png"},767:function(s,e,n){s.exports=n.p+"assets/img/2023052414253686.e1d9ba52.png"}}]);