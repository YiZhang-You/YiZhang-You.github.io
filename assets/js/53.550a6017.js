(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{1035:function(e,n,s){"use strict";s.r(n);var a=s(4),t=Object(a.a)({},(function(){var e=this,n=e._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"✈️2-gin框架中间件详解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#✈️2-gin框架中间件详解"}},[e._v("#")]),e._v(" ✈️2. "),n("strong",[e._v("gin框架中间件详解")])]),e._v(" "),n("p",[n("a",{attrs:{href:"https://www.liwenzhou.com/posts/Go/gin-sourcecode/#autoid-0-0-0",target:"_blank",rel:"noopener noreferrer"}},[e._v("gin框架源码解析 - 李文周的博客"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("gin框架涉及中间件相关有4个常用的方法，它们分别是"),n("code",[e._v("c.Next()")]),e._v("、"),n("code",[e._v("c.Abort()")]),e._v("、"),n("code",[e._v("c.Set()")]),e._v("、"),n("code",[e._v("c.Get()")]),e._v("。")]),e._v(" "),n("h2",{attrs:{id:"中间件的注册"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#中间件的注册"}},[e._v("#")]),e._v(" 中间件的注册")]),e._v(" "),n("p",[e._v("gin框架中的中间件设计很巧妙，我们可以首先从我们最常用的"),n("code",[e._v("r := gin.Default()")]),e._v("的"),n("code",[e._v("Default")]),e._v("函数开始看，它内部构造一个新的"),n("code",[e._v("engine")]),e._v("之后就通过"),n("code",[e._v("Use()")]),e._v("函数注册了"),n("code",[e._v("Logger")]),e._v("中间件和"),n("code",[e._v("Recovery")]),e._v("中间件：")]),e._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[e._v("func Default() *Engine {\n\tdebugPrintWARNINGDefault()\n\tengine := New()\n\tengine.Use(Logger(), Recovery())  // 默认注册的两个中间件\n\treturn engine\n}\n\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br")])]),n("p",[e._v("继续往下查看一下"),n("code",[e._v("Use()")]),e._v("函数的代码：")]),e._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[e._v("func (engine *Engine) Use(middleware ...HandlerFunc) IRoutes {\n\tengine.RouterGroup.Use(middleware...)  // 实际上还是调用的RouterGroup的Use函数\n\tengine.rebuild404Handlers()\n\tengine.rebuild405Handlers()\n\treturn engine\n}\n\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br")])]),n("p",[e._v("从下方的代码可以看出，注册中间件其实就是将中间件函数追加到"),n("code",[e._v("group.Handlers")]),e._v("中：")]),e._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[e._v("func (group *RouterGroup) Use(middleware ...HandlerFunc) IRoutes {\n\tgroup.Handlers = append(group.Handlers, middleware...)\n\treturn group.returnObj()\n}\n\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br")])]),n("p",[e._v("而我们注册路由时会将对应路由的函数和之前的中间件函数结合到一起：")]),e._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[e._v("func (group *RouterGroup) handle(httpMethod, relativePath string, handlers HandlersChain) IRoutes {\n\tabsolutePath := group.calculateAbsolutePath(relativePath)\n\thandlers = group.combineHandlers(handlers)  // 将处理请求的函数与中间件函数结合\n\tgroup.engine.addRoute(httpMethod, absolutePath, handlers)\n\treturn group.returnObj()\n}\n\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br")])]),n("p",[e._v("其中结合操作的函数内容如下，注意观察这里是如何实现拼接两个切片得到一个新切片的。")]),e._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[e._v('const abortIndex int8 = math.MaxInt8 / 2\n\nfunc (group *RouterGroup) combineHandlers(handlers HandlersChain) HandlersChain {\n\tfinalSize := len(group.Handlers) + len(handlers)\n\tif finalSize >= int(abortIndex) {  // 这里有一个最大限制\n\t\tpanic("too many handlers")\n\t}\n\tmergedHandlers := make(HandlersChain, finalSize)\n\tcopy(mergedHandlers, group.Handlers)\n\tcopy(mergedHandlers[len(group.Handlers):], handlers)\n\treturn mergedHandlers\n}\n\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br")])]),n("p",[e._v("也就是说，我们会将一个路由的中间件函数和处理函数结合到一起组成一条处理函数链条"),n("code",[e._v("HandlersChain")]),e._v("，而它本质上就是一个由"),n("code",[e._v("HandlerFunc")]),e._v("组成的切片：")]),e._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[e._v("type HandlersChain []HandlerFunc\n\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("h2",{attrs:{id:"中间件的执行"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#中间件的执行"}},[e._v("#")]),e._v(" 中间件的执行")]),e._v(" "),n("p",[e._v("我们在上面路由匹配的时候见过如下逻辑：")]),e._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[e._v("value := root.getValue(rPath, c.Params, unescape)\nif value.handlers != nil {\n  c.handlers = value.handlers\n  c.Params = value.params\n  c.fullPath = value.fullPath\n  c.Next()  // 执行函数链条\n  c.writermem.WriteHeaderNow()\n  return\n}\n\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br")])]),n("p",[e._v("其中"),n("code",[e._v("c.Next()")]),e._v("就是很关键的一步，它的代码很简单：")]),e._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[e._v("func (c *Context) Next() {\n\tc.index++\n\tfor c.index < int8(len(c.handlers)) {\n\t\tc.handlers[c.index](c)\n\t\tc.index++\n\t}\n}\n\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])]),n("p",[e._v("从上面的代码可以看到，这里通过索引遍历"),n("code",[e._v("HandlersChain")]),e._v("链条，从而实现依次调用该路由的每一个函数（中间件或处理请求的函数）。")]),e._v(" "),n("p",[n("img",{attrs:{src:s(684),alt:""}})]),e._v(" "),n("p",[e._v("我们可以在中间件函数中通过再次调用"),n("code",[e._v("c.Next()")]),e._v("实现嵌套调用（func1中调用func2；func2中调用func3），")]),e._v(" "),n("p",[n("img",{attrs:{src:s(685),alt:""}})]),e._v(" "),n("p",[e._v("或者通过调用"),n("code",[e._v("c.Abort()")]),e._v("中断整个调用链条，从当前函数返回。")]),e._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[e._v("func (c *Context) Abort() {\n\tc.index = abortIndex  // 直接将索引置为最大限制值，从而退出循环\n}\n\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("h4",{attrs:{id:"c-set-c-get"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#c-set-c-get"}},[e._v("#")]),e._v(" c.Set()/c.Get()")]),e._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[e._v("c.Set()\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("和")]),e._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[e._v("c.Get()\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("这两个方法多用于在多个函数之间通过")]),e._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[e._v("c\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("传递数据的，比如我们可以在认证中间件中获取当前请求的相关信息（userID等）通过")]),e._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[e._v("c.Set()\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("存入")]),e._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[e._v("c\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("，然后在后续处理业务逻辑的函数中通过")]),e._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[e._v("c.Get()\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("来获取当前请求的用户。")]),e._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[e._v("c\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("就像是一根绳子，将该次请求相关的所有的函数都串起来了。")]),e._v(" "),n("p",[n("img",{attrs:{src:s(686),alt:""}})]),e._v(" "),n("h3",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),n("ol",[n("li",[n("p",[e._v("gin框架路由使用前缀树，路由注册的过程是构造前缀树的过程，路由匹配的过程就是查找前缀树的过程。")])]),e._v(" "),n("li",[n("p",[e._v("gin框架的中间件函数和处理函数是以切片形式的调用链条存在的，我们可以顺序调用也可以借助"),n("code",[e._v("c.Next()")]),e._v("方法实现嵌套调用。")])]),e._v(" "),n("li",[n("p",[e._v("借助"),n("code",[e._v("c.Set()")]),e._v("和"),n("code",[e._v("c.Get()")]),e._v("方法我们能够在不同的中间件函数中传递数据。")])])])])}),[],!1,null,null,null);n.default=t.exports},684:function(e,n,s){e.exports=s.p+"assets/img/2023052414010781.b18646fc.png"},685:function(e,n,s){e.exports=s.p+"assets/img/2023052414010747.939ec808.png"},686:function(e,n,s){e.exports=s.p+"assets/img/2023052414010717.7b118eb0.png"}}]);