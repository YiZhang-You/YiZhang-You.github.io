(window.webpackJsonp=window.webpackJsonp||[]).push([[437],{1240:function(n,a,s){"use strict";s.r(a);var e=s(4),t=Object(e.a)({},(function(){var n=this,a=n._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"linux-配置python虚拟环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux-配置python虚拟环境"}},[n._v("#")]),n._v(" linux-配置python虚拟环境")]),n._v(" "),a("h2",{attrs:{id:"linux安装python3与virtualenv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux安装python3与virtualenv"}},[n._v("#")]),n._v(" "),a("strong",[n._v("Linux安装python3与virtualenv")])]),n._v(" "),a("p",[n._v("centos7默认是装有python的 "),a("strong",[n._v("python -V")])]),n._v(" "),a("h3",{attrs:{id:"_1、安装python3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、安装python3"}},[n._v("#")]),n._v(" "),a("strong",[n._v("1、安装python3")])]),n._v(" "),a("h4",{attrs:{id:"_1-1-解决环境依赖的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-解决环境依赖的问题"}},[n._v("#")]),n._v(" "),a("strong",[n._v("1.1 解决环境依赖的问题")])]),n._v(" "),a("p",[n._v("安装python前的库环境，非常重要，如果要正确安装python3，且使用python3的功能，需提前解决如下的环境依赖的问题")]),n._v(" "),a("div",{staticClass:"language-Plain Text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[n._v("yum install gcc patch libffi-devel python-devel  zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel -y\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br")])]),a("h4",{attrs:{id:"_1-2-下载python3的源码包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-下载python3的源码包"}},[n._v("#")]),n._v(" "),a("strong",[n._v("1.2 下载python3的源码包")])]),n._v(" "),a("p",[a("strong",[n._v("网址：")]),a("a",{attrs:{href:"https://www.python.org/downloads/release/python-388/",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://www.python.org/downloads/release/python-388/"),a("OutboundLink")],1)]),n._v(" "),a("p",[a("strong",[n._v("下载地址：")]),a("a",{attrs:{href:"https://www.python.org/ftp/python/3.8.8/Python-3.8.8.tgz",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://www.python.org/ftp/python/3.8.8/Python-3.8.8.tgz"),a("OutboundLink")],1),n._v(" (这里以3.8示例)")]),n._v(" "),a("p",[n._v("我们可以在opt（给主机额外安装软件所摆放的目录）文件下下载(看自己)")]),n._v(" "),a("p",[n._v("1、下载")]),n._v(" "),a("div",{staticClass:"language-Plain Text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[n._v("wget https://www.python.org/ftp/python/3.8.8/Python-3.8.8.tgz\n\n# wget命令用于在终端下载网络文件，下载成功后会出现Python-3.8.8.tgz压缩包\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br")])]),a("p",[n._v("2、解压")]),n._v(" "),a("div",{staticClass:"language-Plain Text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[n._v("tar -xf Python-3.8.8.tgz\n\n# tar 压缩命令\n# -x  解压参数\n# -f  指定一个压缩文件的名字\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br")])]),a("p",[n._v("3、编译且安装")]),n._v(" "),a("p",[n._v("进入python源码包目录，cd Python-3.8.8")]),n._v(" "),a("div",{staticClass:"language-Plain Text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[n._v("./configure --prefix=/opt/python3/      # 告诉编译器，python3安装到哪里\n\n# --prefix  指定文件路径\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br")])]),a("div",{staticClass:"language-Plain Text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[n._v("make && make install    # 编译 && 安装\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br")])]),a("p",[a("strong",[n._v("安装成功后会在opt下有个python3文件夹，cd /python3/bin  执行./python3.8  成功就表示安装成功了")])]),n._v(" "),a("p",[n._v("4、配置python3环境变量")]),n._v(" "),a("p",[n._v("安装成功后我们要配置环境变量，以后直接python3.8就可以打卡")]),n._v(" "),a("div",{staticClass:"language-Plain Text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[n._v("vim /etc/profile    # 进入文件\n\nexport PATH=/opt/python3/bin:$PATH  # 在/etc/profile最后一行添加\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br")])]),a("div",{staticClass:"language-Plain Text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[n._v("source /etc/profile     # 执行文件\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br")])]),a("p",[a("strong",[n._v("echo $PATH #取出打印PATH的值(也可以这样 export PATH= /opt/python3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin)")])]),n._v(" "),a("p",[n._v("5、测试")]),n._v(" "),a("p",[n._v("直接输入python3.8即可")]),n._v(" "),a("h4",{attrs:{id:"_1-3-linux下进行django开发-简单版"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-linux下进行django开发-简单版"}},[n._v("#")]),n._v(" "),a("strong",[n._v("1.3 linux下进行django开发(简单版)")])]),n._v(" "),a("p",[n._v("1、下载django模块")]),n._v(" "),a("div",{staticClass:"language-Plain Text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[n._v("pip install django\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br")])]),a("p",[n._v("2、创建django项目")]),n._v(" "),a("div",{staticClass:"language-Plain Text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[n._v("django-admin startproject 项目名\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br")])]),a("p",[n._v("3、修改django配置")]),n._v(" "),a("div",{staticClass:"language-Plain Text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[n._v("127.0.0.1       本机回环地址，只能自己访问到自己，每台机器都有一个127.0.0.1\n0.0.0.0         代表绑定这台机器所有的网卡，所有人都可以去访问\n192.168.16.37   当前机器对外提供访问的ip的地址\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br")])]),a("div",{staticClass:"language-Plain Text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[n._v(' # 关闭linux的防火墙\n iptables -F    # 清空防火墙规则\n\n # 修改django配置文件中的settings.py\n ALLOWED_HOSTS = ["*"]\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br")])]),a("p",[n._v("4、运行django项目")]),n._v(" "),a("div",{staticClass:"language-Plain Text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[n._v("# 如果你项目启动在这个地址上，绑定了这个机器所有的ip，自己可以通过127.0.0.1:8000访问\n# 其他人如果想访问中国项目，应该访问 192.168.16.37：8000\n\npython3 manage.py runserver 0.0.0.0:8000\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br")])]),a("h3",{attrs:{id:"_2、安装python虚拟环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、安装python虚拟环境"}},[n._v("#")]),n._v(" "),a("strong",[n._v("2、安装python虚拟环境")])]),n._v(" "),a("h4",{attrs:{id:"_2-1-virtualenv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-virtualenv"}},[n._v("#")]),n._v(" "),a("strong",[n._v("2.1 virtualenv")])]),n._v(" "),a("p",[a("strong",[n._v("virtualenv 可以在系统中建立多个不同并且相互不干扰的虚拟环境")])]),n._v(" "),a("p",[n._v("修改镜像源，并升级pip")]),n._v(" "),a("div",{staticClass:"language-Plain Text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[n._v("# 指定清华源下载pip的包\npip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple virtualenv\n# 升级pip工具\npip3 install --upgrade pip\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br")])]),a("p",[n._v("1、安装配置virtualenv")]),n._v(" "),a("div",{staticClass:"language-Plain Text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[n._v("# pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple 环境名称\npip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple virtualenv\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br")])]),a("p",[n._v("2、创建目录")]),n._v(" "),a("div",{staticClass:"language-Plain Text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[n._v("mkdir Myproject\ncd Myproject\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br")])]),a("p",[n._v("3、创建独立运行环境-命名")]),n._v(" "),a("div",{staticClass:"language-Plain Text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[n._v("virtualenv --python=python3  venv#得到独立第三方包的环境，并且指定解释器是python3\n# ! 注意如果tirtualenv版本小于20的话用virtualenv --no-site-packages --python=python3  venv\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br")])]),a("p",[n._v("4、进入虚拟环境")]),n._v(" "),a("div",{staticClass:"language-Plain Text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[n._v("source venv/bin/activate    # 此时进入虚拟环境(venv)Myproject\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br")])]),a("p",[n._v("5、安装第三方包")]),n._v(" "),a("div",{staticClass:"language-Plain Text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[n._v("(venv)Myproject: pip3 install django==1.9.8\n#此时pip的包都会安装到venv环境下，venv是针对Myproject创建的\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br")])]),a("p",[n._v("6、退出venv环境")]),n._v(" "),a("div",{staticClass:"language-Plain Text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[n._v("deactivate命令\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br")])]),a("div",{staticClass:"language-Plain Text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[n._v("virtualenv是如何创建“独立”的Python运行环境的呢？原理很简单，就是把系统Python复制一份到virtualenv的环境，用命令source venv/bin/activate进入一个virtualenv环境时，virtualenv会修改相关环境变量，让命令python和pip均指向当前的virtualenv环境。\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br")])]),a("h4",{attrs:{id:"_2-2-virtualenvwrapper"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-virtualenvwrapper"}},[n._v("#")]),n._v(" "),a("strong",[n._v("2.2 virtualenvwrapper")])]),n._v(" "),a("p",[a("strong",[n._v("virtualenv 的一个最大的缺点就是：")])]),n._v(" "),a("p",[a("strong",[n._v("每次开启虚拟环境之前要去虚拟环境所在目录下的 bin 目录下 source 一下 activate，这就需要我们记住每个虚拟环境所在的目录。")])]),n._v(" "),a("p",[a("strong",[n._v("并且还有可能你忘记了虚拟环境放在哪。。。")])]),n._v(" "),a("ul",[a("li",[a("p",[n._v("一种可行的解决方案是，将所有的虚拟环境目录全都集中起来，例如/opt/all_venv/，并且针对不同的目录做不同的事。")])]),n._v(" "),a("li",[a("p",[n._v("使用virtualenvwrapper管理你的虚拟环境（virtualenv），其实他就是统一管理虚拟环境的目录，并且省去了source的步骤。")])])]),n._v(" "),a("p",[n._v("1、安装并配置virtualenvwrapper")]),n._v(" "),a("div",{staticClass:"language-Plain Text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[n._v("# 1、安装\npip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple virtualenvwrapper\n\n# 2、配置环境变量，每次开机都加载virtualenvwrapper这个工具，注意是配置的是个人环境变量配置文件\nvim ~/.bash_profile  # 2.1 打开文件\n\n#2.2 把下面的命令直接复制到里面（下面4条）。设置环境变量，每次开机加载virtualevnwrapper\nexport WORKON_HOME=~/Envs   #设置virtualenv的统一管理目录\nexport VIRTUALENVWRAPPER_VIRTUALENV_ARGS='--no-site-packages'   #添加virtualenvwrapper的参数，生成干净隔绝的环境\nexport VIRTUALENVWRAPPER_PYTHON=/opt/python3/bin/python3     #指定python解释器\nsource /opt/python3/bin/virtualenvwrapper.sh #执行virtualenvwrapper安装脚本\n读取文件，使得生效，此时已经可以使用virtalenvwrapper\n\n# !!! 如果虚拟环境的版本大于20的话就把第三行注释掉\n\n# 3、关闭xshell重新打开一个窗口\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br")])]),a("p",[n._v("2、管理虚拟环境的命令")]),n._v(" "),a("div",{staticClass:"language-Plain Text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[n._v("创建一个虚拟环境：\nmkvirtualenv my_django115\n这会在 ~/Envs 中创建 my_django115 文件夹。\n\n激活虚拟环境my_django115\nworkon my_django115\n\n也可以手动停止虚拟环境\ndeactivate\n\n删除虚拟环境，需要先退出虚拟环境\nrmvirtualenv my_django115\n\nlsvirtualenv\n列举所有的环境。\n\ncdvirtualenv\n导航到当前激活的虚拟环境的目录中，比如说这样您就能够浏览它的 site-packages 。\n\ncdsitepackages\n和上面的类似，但是是直接进入到 site-packages 目录中。\nlssitepackages\n\n显示 site-packages 目录中的内容。\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br")])]),a("h4",{attrs:{id:"_2-3-确保开发环境的一致性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-确保开发环境的一致性"}},[n._v("#")]),n._v(" "),a("strong",[n._v("2.3 确保开发环境的一致性")])]),n._v(" "),a("div",{staticClass:"language-Plain Text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[n._v("# 1.假设我们在本地开发环境，准备好了项目+依赖包环境\n# 2.现在需要将项目上传至服务器，上线发布\n# 3.那么就要保证服务器的python环境一致性\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br")])]),a("div",{staticClass:"language-Plain Text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[n._v("解决方案：\n\n1.通过命令保证环境的一致性，导出当前python环境的包\npip3 freeze > requirements.txt\n\n这将会创建一个 requirements.txt 文件，其中包含了当前环境中所有包及 各自的版本的简单列表。\n可以使用 “pip list”在不产生requirements文件的情况下， 查看已安装包的列表。\n\n2.上传至服务器后，在服务器下创建virtualenv，在venv中导入项目所需的模块依赖\npip3 install -r requirements.txt\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br")])])])}),[],!1,null,null,null);a.default=t.exports}}]);