(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{835:function(t,l,s){"use strict";s.r(l);var e=s(4),i=Object(e.a)({},(function(){var t=this,l=t._self._c;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h2",{attrs:{id:"_1-list-tuple-dict-set的区别和联系"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_1-list-tuple-dict-set的区别和联系"}},[t._v("#")]),t._v(" 1. list,tuple,dict,set的区别和联系")]),t._v(" "),l("ul",[l("li",[t._v("定义方式: list[] tuple() dict{} set{}")]),t._v(" "),l("li",[t._v("有序: list tuple")]),t._v(" "),l("li",[t._v("无序: dict set")]),t._v(" "),l("li",[t._v("是否允许出现重复元素: list,tuple:允许 dict:key不允许,value可以, set不允许")]),t._v(" "),l("li",[t._v("都属于可迭代对象")]),t._v(" "),l("li",[t._v("set相当于存储了字典中的key")]),t._v(" "),l("li",[t._v("可以相互转化")])]),t._v(" "),l("h2",{attrs:{id:"列表-list"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#列表-list"}},[t._v("#")]),t._v(" 列表（List）")]),t._v(" "),l("ul",[l("li",[t._v("使用方括号 [] 表示，元素之间用逗号 , 分隔。")]),t._v(" "),l("li",[t._v("可以进行增删改查等操作，支持重复元素，有序（即按照插入顺序排列）。")])]),t._v(" "),l("h2",{attrs:{id:"元组-tuple"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#元组-tuple"}},[t._v("#")]),t._v(" 元组（Tuple）")]),t._v(" "),l("ul",[l("li",[t._v("使用圆括号 () 表示，元素之间用逗号 , 分隔。")]),t._v(" "),l("li",[t._v("不支持修改操作，只能进行查找操作，支持重复元素，有序。")])]),t._v(" "),l("h2",{attrs:{id:"字典-dict"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#字典-dict"}},[t._v("#")]),t._v(" 字典（Dict）")]),t._v(" "),l("ul",[l("li",[t._v("使用花括号 {} 表示，元素之间用冒号 : 分隔，键值对之间用逗号 , 分隔。")]),t._v(" "),l("li",[t._v("通过 key-value 的方式进行查找和存储，key 是唯一的且不可变的，value 可以是任意对象。")]),t._v(" "),l("li",[t._v("可以进行增删改查等操作，不支持重复的 key ，无序。")])]),t._v(" "),l("h2",{attrs:{id:"集合-set"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#集合-set"}},[t._v("#")]),t._v(" 集合（Set）")]),t._v(" "),l("ul",[l("li",[t._v("使用花括号 {} 或者 set() 函数表示，元素之间用逗号 , 分隔。")]),t._v(" "),l("li",[t._v("内部元素不重复，即自动去重，无序。")]),t._v(" "),l("li",[t._v("支持交集、并集、差集等集合运算。")])])])}),[],!1,null,null,null);l.default=i.exports}}]);