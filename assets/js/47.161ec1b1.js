(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{555:function(s,a,t){s.exports=t.p+"assets/img/10.41524e8a.png"},556:function(s,a,t){s.exports=t.p+"assets/img/11.0a3f489d.png"},557:function(s,a,t){s.exports=t.p+"assets/img/12.ce4fddce.png"},952:function(s,a,t){"use strict";t.r(a);var e=t(4),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("Go语言是编译型的静态语言（和C语言一样），所以在运行Go语言程序之前，先要将其编译成二进制的可执行文件。")]),s._v(" "),a("p",[s._v("可以通过Go语言提供的 "),a("strong",[s._v("go build")]),s._v(" 或者 "),a("strong",[s._v("go run")]),s._v(" 命令对Go语言程序进行编译：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("go build")]),s._v("命令可以将Go语言程序代码编译成二进制的可执行文件，但是需要我们手动运行该二进制文件；")]),s._v(" "),a("li",[a("code",[s._v("go run")]),s._v("命令则更加方便，它会在编译后直接运行Go语言程序，编译过程中会产生一个临时文件，但不会生成可执行文件，这个特点很适合用来调试程序。")])]),s._v(" "),a("h2",{attrs:{id:"执行流程分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行流程分析"}},[s._v("#")]),s._v(" 执行流程分析")]),s._v(" "),a("p",[a("img",{attrs:{src:t(555),alt:""}})]),s._v(" "),a("p",[s._v("demo.go")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" main\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fmt"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("下面就来演示一下，如何运行Go语言程序。")]),s._v(" "),a("p",[s._v("因为之前我们已经配置好了环境变量，所以可以直接使用 Windows 自带的命令行工具（也叫 CMD 窗口或者命令提示符）来编译Go语言程序。微软后来对命令行工具进行了一次升级，并更名为 Powershell，power 是更加强大的意思。")]),s._v(" "),a("p",[s._v("打开命令行工具的方式多种多样，下面列出了比较常用的两种：")]),s._v(" "),a("ul",[a("li",[s._v("可以在开始菜单中打开命令行工具，然后 cd 到 Go 源文件所在的目录。")]),s._v(" "),a("li",[s._v("也可以在 Go 源文件所在目录的空白处按住 Shift 键并单击鼠标右键，然后在弹出菜单中选择“在此处打开命令行窗口”或者“在此处打开 Powershell 窗口”，这样会自动 cd 到 Go 源文件所在的目录，如下图所示。这种方式更加方便，推荐大家使用。")])]),s._v(" "),a("p",[s._v("提示：cd 是命令行工具的一个命令，用来改变当前所在的目录，是 change directory 的缩写。")]),s._v(" "),a("p",[a("img",{attrs:{src:t(556),alt:""}})]),s._v(" "),a("p",[s._v("Win7 下选择“在此处打开命令窗口”")]),s._v(" "),a("p",[a("img",{attrs:{src:t(557),alt:""}})]),s._v(" "),a("p",[s._v("Win10 下选择“在此处打开 Powershell 窗口”")]),s._v(" "),a("h2",{attrs:{id:"go-build-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#go-build-命令"}},[s._v("#")]),s._v(" go build 命令")]),s._v(" "),a("p",[s._v("go build 命令用来启动编译，它可以将Go语言程序与相关依赖编译成一个可执行文件，其语法格式如下。")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("go")]),s._v(" build fileName\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("其中 fileName 为所需要的参数，可以是一个或者多个 Go 源文件名（当有多个参数时需要使用空格将两个相邻的参数隔开），也可以省略不写。")]),s._v(" "),a("p",[s._v("使用 go build 命令进行编译时，不同参数的执行结果也是不同的。")]),s._v(" "),a("h3",{attrs:{id:"_1-当参数不为空时"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-当参数不为空时"}},[s._v("#")]),s._v(" 1) 当参数不为空时")]),s._v(" "),a("p",[s._v("如果 fileName 为同一 main 包下的所有源文件名（可能有一个或者多个），编译器将生成一个与第一个 fileName 同名的可执行文件（"),a("strong",[s._v("如执行 go build abc.go def.go ... 会生成一个 abc.exe 文件")]),s._v("）；如果 fileName 为非 main 包下的源文件名，编译器将只对该包进行语法检查，不生成可执行文件。")]),s._v(" "),a("h3",{attrs:{id:"_2-当参数为空时"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-当参数为空时"}},[s._v("#")]),s._v(" 2) 当参数为空时")]),s._v(" "),a("p",[s._v("如果当前目录下存在 main 包，则会生成一个与当前目录名同名的“目录名.exe”可执行文件（如在 hello 目录中执行 "),a("strong",[s._v("go build")]),s._v(" 命令时，会生成 hello.exe 文件）；如果不存在 main 包，则只对当前目录下的程序源码进行语法检查，不会生成可执行文件。")]),s._v(" "),a("p",[s._v("使用 go build 命令对程序进行编译，运行结果如下所示：")]),s._v(" "),a("p",[s._v("D:\\code> go build .\\demo.goD:\\code> .\\demo.exeHello World!")]),s._v(" "),a("p",[s._v("其中")]),s._v(" "),a("p",[s._v("D:\\code>")]),s._v(" "),a("p",[s._v("对应的是当前目录，也就是 D 盘下的 code 文件夹，它是命令行工具自动添加的，不属于编译命令的一部分。")]),s._v(" "),a("p",[s._v("第 1 行 go build 命令后面的参数中， .\\ 表示当前目录。在Windows 系统中，当前目录使用 .\\ 表示；在类 Unix 系统（例如 Linux、MacOS 等）中，当前目录使用 ./表示。")]),s._v(" "),a("p",[s._v("注意，这里的"),a("code",[s._v("go build")]),s._v("命令中"),a("code",[s._v(".\\")]),s._v("可以省略不写，不会影响编译。")]),s._v(" "),a("p",[s._v("另外， go build命令只有在执行出错的情况下才会有返回信息，执行成功的话是没有返回信息的，但是会在当前目录生成一个与 main 包文件同名的 .exe 可执行文件，如下图所示。")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://c.biancheng.net/uploads/allimg/191017/4-19101G64RA16.gif",alt:"http://c.biancheng.net/uploads/allimg/191017/4-19101G64RA16.gif"}})]),s._v(" "),a("p",[s._v("第 2 行中的 .\\demo.exe")]),s._v(" "),a("p",[s._v("表示执行当前目录下的 demo.exe 程序。")]),s._v(" "),a("p",[s._v("第 3 行则是 demo.exe 程序的运行结果。")]),s._v(" "),a("h2",{attrs:{id:"go-run-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#go-run-命令"}},[s._v("#")]),s._v(" go run 命令")]),s._v(" "),a("p",[s._v("除了使用 go build 命令外，Go语言还为我们提供了 go run 命令将编译和执行指令合二为一，会在编译之后立即执行Go语言程序，但是不会生成可执行文件。")]),s._v(" "),a("p",[s._v("go run 命令的语法格式如下：")]),s._v(" "),a("p",[s._v("go run fileName")]),s._v(" "),a("p",[s._v("其中 fileName 为所需要的参数，参数必须是同一 main 包下的所有源文件名，并且不能为空。")]),s._v(" "),a("p",[s._v("使用 go run 命令对我们上一节编写的程序进行编译，运行结果如下所示：")]),s._v(" "),a("p",[s._v("D:\\code> go run demo.goHello World!")]),s._v(" "),a("p",[s._v("可以看到第 1 行的 go run 命令执行后，直接在第 2 行输出了程序的运行结果。")]),s._v(" "),a("p",[s._v("除了本节中所讲的， go build 命令和 go run 命令还有很多其他的编译方法，我们将在后面为大家详细介绍。")])])}),[],!1,null,null,null);a.default=n.exports}}]);