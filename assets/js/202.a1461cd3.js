(window.webpackJsonp=window.webpackJsonp||[]).push([[202],{942:function(s,n,a){"use strict";a.r(n);var e=a(4),t=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"day03"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#day03"}},[s._v("#")]),s._v(" "),n("strong",[s._v("day03")])]),s._v(" "),n("h3",{attrs:{id:"内容回顾"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内容回顾"}},[s._v("#")]),s._v(" "),n("strong",[s._v("内容回顾")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 1. 面向对象：特殊方法\n   obj['x'] = 123\n   obj.x = 123\n   obj + 123\n# 2. functools\n   def func(a1,a2,a3):\n      return a1 + a2 + a3\n\n   v1 = func(1,2,3)\n\n   new_func = functools.partial(func,111,2)  # partial帮助我们传递参数原来func需要传递三个参数，现在只用传递一个 a3=3\n   new_func(3)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h3",{attrs:{id:"今日内容"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#今日内容"}},[s._v("#")]),s._v(" "),n("strong",[s._v("今日内容")])]),s._v(" "),n("h3",{attrs:{id:"_1、上下文管理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、上下文管理"}},[s._v("#")]),s._v(" "),n("strong",[s._v("1、上下文管理")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("我看的这个：<https://www.cnblogs.com/zhaopanpan/articles/9457343.html>\n<https://cloud.tencent.com/developer/article/1794125>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("strong",[s._v("django、tornado是通过传参的形式传递数据，而flask是通过其特有的上下文管理机制来管理数据的。")])]),s._v(" "),n("p",[n("strong",[s._v("在flask中，上下文管理机制分为两个大的部分：请求上下文和应用上下文。")])]),s._v(" "),n("p",[s._v("在了解flask上下文管理机制之前，先来一波必知必会的知识点")]),s._v(" "),n("h3",{attrs:{id:"_1-1-call"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-call"}},[s._v("#")]),s._v(" "),n("strong",[s._v("1.1 "),n("code",[s._v("__call__")])])]),s._v(" "),n("p",[s._v("创建对象的")]),s._v(" "),n("p",[s._v("这个方法相信大家并不陌生，在单例模式中，我们可能用到过，除此之外，还想就没有在什么特殊场景中用到了。我们往往忽视了它一个很特殊的用法：对象object+()或者类Foo()+()这种很特殊的用法。在Flask上下文管理中，入口就是使用了这种方式。")]),s._v(" "),n("h3",{attrs:{id:"_1-2-getitem"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-getitem"}},[s._v("#")]),s._v(" "),n("strong",[s._v("1.2 "),n("code",[s._v("__getitem__")])])]),s._v(" "),n("p",[s._v("使用这个系列的方法时，我们最大的印象就是调用对象的属性可以像字典取值一样使用中括号[]。使用中括号对对象中的属性进行取值、赋值或者删除时，会自动触发对应的"),n("strong",[s._v("getitem")]),s._v("、"),n("strong",[s._v("setitem")]),s._v("、"),n("strong",[s._v("delitem")]),s._v("方法。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('class Foo(object):\n\n    def __init__(self):\n        self.name = "boo"\n\n    def __getitem__(self, item):\n        print("调用__getitem__了", item)\n        if item in self.__dict__:\n            return self.__dict__[item]\n\n    def __setitem__(self, key, value):\n        print("调用__setitem__方法了", key, value)\n        self.__dict__[key] = value\n\n    def __delitem__(self, key):\n        print("调用__delitem__", key)\n        del self.__dict__[key]\n\nfoo = Foo()\nret = foo["name"]\n# print(ret)     # 输出     调用__getitem__了      boo\nfoo["age"] = 18\n# print(foo["age"])   # 输出   调用__setitem__方法了   调用__getitem__了    18\ndel foo["age"]  # 输出  调用__delitem__\n\n"""\n在类中实现了 __getitem__ 方法可以使用对象[属性] 拿到对应的值，\n在类中实现了 __setitem__ 方法可以直接对象[属性] 添加值\n在类中实现了 __delitem__ 方法  foo["age"]\n"""\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br")])]),n("h3",{attrs:{id:"_1-3-getattr"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-getattr"}},[s._v("#")]),s._v(" "),n("strong",[s._v("1.3 "),n("code",[s._v("__getattr__")])])]),s._v(" "),n("p",[s._v("使用对象取值、赋值或者删除时，会默认的调用对应的"),n("strong",[s._v("getattr")]),s._v("、"),n("strong",[s._v("setattr")]),s._v("、"),n("strong",[s._v("delattr")]),s._v("方法。")]),s._v(" "),n("p",[s._v("对象取值时，取值的顺序为：先从"),n("strong",[s._v("getattribute")]),s._v("中找，第二步从对象的属性中找，第三步从当前类中找，第四步从父类中找，第五步从"),n("strong",[s._v("getattr")]),s._v("中找，如果没有，直接抛出异常。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('class Foo(object):\n\n    def __init__(self):\n        self.name = "boo"\n\n    def __getattr__(self, item):\n        print("调用__getattr__了", item)\n\n    def __setattr__(self, key, value):\n        print("调用__setattr__方法了", key, value)\n\n    def __delattr__(self, item):\n        print("调用__delattr__", item)\n\nfoo = Foo()\nret = foo.xxx  # 输出     调用__getattr__了\nfoo.age = 18  # 调用__setattr__方法了\ndel foo.age  # 输出  调用__delattr__\n"""\n调用__setattr__方法了 name boo\n调用__getattr__了 xxx\n调用__setattr__方法了 age 18\n调用__delattr__ age\n"""\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("h3",{attrs:{id:"_1-4-偏函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-偏函数"}},[s._v("#")]),s._v(" "),n("strong",[s._v("1.4 偏函数")])]),s._v(" "),n("p",[s._v("python中有一个小工具包functools，这个包中包含了几个在很有用的小功能，比如：")]),s._v(" "),n("ul",[n("li",[s._v("wraps：在使用装饰器时，使用这个方法可以保护函数的元信息。")]),s._v(" "),n("li",[s._v("reduce：一个合并序列项为一个单一值的小方法。")]),s._v(" "),n("li",[s._v("还有一个就是偏函数： partial")])]),s._v(" "),n("p",[s._v("一句话来总结partial的作用，固定函数中的一些参数，返回一个新的函数，方便调用")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("from functools import partial\n\nclass Foo(object):\n\n    def __init__(self):\n        self.request = \"request\"\n        self.session = \"session\"\n\nfoo = Foo()\n\ndef func(args):\n    return getattr(foo, args)\n\nre_func = partial(func, 'request')  # 帮助源函数传递值\nse_func = partial(func, 'session')\n\nprint(re_func())\nprint(se_func())\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("h3",{attrs:{id:"_1-5-threading-local"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-threading-local"}},[s._v("#")]),s._v(" "),n("strong",[s._v("1.5 threading Local()")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("详细资料：<http://c.biancheng.net/view/2628.html>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("在多线程中，同一个进程中的多个线程是共享一个内存地址的，多个线程操作数据时，就会造成数据的不安全，所以我们就要加锁。但是，对于一些变量，如果仅仅只在本线程中使用，怎么办？")]),s._v(" "),n("p",[s._v("方法一，可以通过全局的字典，key为当前线程的线程ID，value为具体的值。(自定义方法)")]),s._v(" "),n("p",[s._v("方法二，使用threading.local方法")]),s._v(" "),n("p",[n("strong",[s._v("作用：为每一个线程开辟一块空间进行数据存储，空间和空间是互相隔离的")])]),s._v(" "),n("h3",{attrs:{id:"a-使用local方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#a-使用local方法"}},[s._v("#")]),s._v(" "),n("strong",[s._v("a. 使用local方法")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("import time\nimport threading\n\nlocal = threading.local()\n\ndef func(n):\n    local.val = n\n    time.sleep(5)\n    print(n)\n\nfor i in range(10):\n    t = threading.Thread(target=func,args=(i,))\n    t.start()\n\n# 结果输出    0--9\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h3",{attrs:{id:"b-自定义实现local-重点看一下"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#b-自定义实现local-重点看一下"}},[s._v("#")]),s._v(" "),n("strong",[s._v("b.!自定义实现Local(),重点看一下")])]),s._v(" "),n("p",[n("strong",[s._v("定制粒度更细的")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("try:\n    from greenlet import getcurrent as get_ident\nexcept Exception as e:\n    from threading import get_ident\nfrom threading import Thread\nimport time\n\nclass Local(object):\n\n    def __init__(self):\n        # self.storage = {}\n        # 为什么不能直接这样，因为当进来Local对象中的self.storage是调用内部的__setattr__方法创建的，但是这里被我们重写了，所以不会去创建实例变量\n        # 我们就要去调用父类的__setattr__方法进行创建\n        object.__setattr__(self, 'storage', {})  # self.storage = object.__setattr__(self, 'storage', {})\n\n    def __setattr__(self, k, v):\n        ident = get_ident()  # 得到线程或者协程的id\n        if ident in self.storage:\n            self.storage[ident][k] = v\n        else:\n            self.storage[ident] = {k: v}\n\n    def __getattr__(self, k):\n        ident = get_ident()\n        return self.storage[ident][k]\n\nobj = Local()\n\ndef task(arg):\n    obj.val = arg  # 在类中实现了__setattr__（k,v） 就可以通过 对象.key =值 直接存\n    # print(obj.storage)\n    # obj.xxx = arg\n    time.sleep(2)\n    print(obj.val)  # 在类中实现了__getattr__（k,） 就可以通过 对象.key 直接获取字典的值\n\nfor i in range(10):\n    t = Thread(target=task, args=(i,))\n    t.start()\n\n\"\"\"\n1.可以通过协程的方式或者线程的方式创建\n{24244: {'val': 0}}\n{24244: {'val': 0}, 19356: {'val': 1}}\n\"\"\"\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br")])]),n("h3",{attrs:{id:"c-仿照flask用栈来实现自定义threading-local的存取"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#c-仿照flask用栈来实现自定义threading-local的存取"}},[s._v("#")]),s._v(" "),n("strong",[s._v("c. 仿照flask用栈来实现自定义threading.local的存取")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('from greenlet import getcurrent\n\nclass Local(object):\n\n    def __init__(self):\n        object.__setattr__(self, "_storage", {})\n\n    def __setattr__(self, key, value):\n\n        # ident = threading.get_ident()\n        ident = getcurrent()  # 得到协程的id 定制粒度更细的\n        if ident in self._storage:\n            self._storage[ident][key] = value\n        else:\n            self._storage[ident] = {key: value}\n\n    def __getattr__(self, item):\n        # ident = threading.get_ident()\n        ident = getcurrent()\n        return self._storage[ident][item]\n\nclass LocalStack(object):\n\n    def __init__(self):\n        self.local = Local()\n\n    def push(self, item):\n        self.local.stack = []\n        self.local.stack.append(item)\n\n    def pop(self):\n        return self.local.stack.pop()\n\n    def top(self):\n        return self.local.stack[-1]\n\n_local_stack = LocalStack()\n_local_stack.push(55)\n_local_stack.push(32)\n_local_stack.push(21)\nprint(_local_stack.top())  # 取栈顶元素\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br")])]),n("h3",{attrs:{id:"_1-6-flask的上下文管理机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-flask的上下文管理机制"}},[s._v("#")]),s._v(" "),n("strong",[s._v("1.6 flask的上下文管理机制")])]),s._v(" "),n("p",[s._v("在flask中，上下文管理机制分为两个大的部分："),n("strong",[s._v("请求上下文")]),s._v("和"),n("strong",[s._v("应用上下文")]),s._v("。")]),s._v(" "),n("ul",[n("li",[s._v("请求上下文：request/session")]),s._v(" "),n("li",[s._v("应用上下文：app/g")])]),s._v(" "),n("p",[s._v("从以下三个大的方面分别探讨flask的两大上下文管理机制。")]),s._v(" "),n("ol",[n("li",[s._v("方面一：请求进来时")]),s._v(" "),n("li",[s._v("方面二：视图函数")]),s._v(" "),n("li",[s._v("方面三：请求结束前")])]),s._v(" "),n("h3",{attrs:{id:"_1-请求上下文管理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-请求上下文管理"}},[s._v("#")]),s._v(" "),n("strong",[s._v("1. 请求上下文管理")])]),s._v(" "),n("p",[s._v("先来一个最简单的flask版的Hello World")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("from flask import Flask\n\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n    return \"Hello World\"\n\nif __name__ == '__main__':\n    app.run()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("启动一个flask项目时，会先执行app.run()方法，这是整个项目的入口，执行run方法时，接着执行werkzeug模块中的run_simple")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://images2018.cnblogs.com/blog/1316789/201808/1316789-20180810225921512-294502634.png",alt:"https://images2018.cnblogs.com/blog/1316789/201808/1316789-20180810225921512-294502634.png"}})]),s._v(" "),n("p",[s._v("werkzeug中触发调用了Flask的"),n("strong",[s._v("call")]),s._v("方法")]),s._v(" "),n("h3",{attrs:{id:"a-请求进来时"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#a-请求进来时"}},[s._v("#")]),s._v(" "),n("strong",[s._v("a. 请求进来时")])]),s._v(" "),n("p",[s._v("触发执行"),n("strong",[s._v("call")]),s._v("方法，"),n("strong",[s._v("call")]),s._v("方法的逻辑很简单，直接执行wsgi_app方法，将包含所有请求相关数据和一个响应函数传进去。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://images2018.cnblogs.com/blog/1316789/201808/1316789-20180810231226918-1233584610.png",alt:"https://images2018.cnblogs.com/blog/1316789/201808/1316789-20180810231226918-1233584610.png"}})]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def application(environ, start_response):\n    start_response('200 OK', [('Content-Type', 'text/html')])\n    return '<h1>Hello, web!</h1>'\n\n上面的application()函数就是符合WSGI标准的一个HTTP处理函数，它接收两个参数：\n\n    environ：一个包含所有HTTP请求信息的dict对象；\n\n    start_response：一个发送HTTP响应的函数。\n\n在application()函数中，调用：\n\nstart_response('200 OK', [('Content-Type', 'text/html')])\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("备注："),n("strong",[s._v("call")]),s._v("是一个符合wsgi标准的函数")]),s._v(" "),n("p",[s._v("执行wsgi_app方法")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def wsgi_app(self, environ, start_response):\n\n        ctx = self.request_context(environ)\n        error = None\n        try:\n            try:\n                ctx.push()\n                response = self.full_dispatch_request()\n            except Exception as e:\n                error = e\n                response = self.handle_exception(e)\n            except:\n                error = sys.exc_info()[1]\n                raise\n            return response(environ, start_response)\n        finally:\n            if self.should_ignore_error(error):\n                error = None\n            ctx.auto_pop(error)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("第一步先执行了一个request_context的方法，将environ传进去，最后返回一个RequestContext类的对象，被ctx的变量接收（ctx=request_context(environ)）")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(' def request_context(self, environ):\n        """Create a :class:`~flask.ctx.RequestContext` representing a\n        WSGI environment. Use a ``with`` block to push the context,\n        which will make :data:`request` point at this request.\n\n        See :doc:`/reqcontext`.\n\n        Typically you should not call this from your own code. A request\n        context is automatically pushed by the :meth:`wsgi_app` when\n        handling a request. Use :meth:`test_request_context` to create\n        an environment and context instead of this method.\n\n        :param environ: a WSGI environment\n        """\n        return RequestContext(self, environ)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("这个ctx对象在初始化时，赋了两个非常有用的属性，一个是request，一个是session")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def __init__(self, app, environ, request=None):\n    self.app = app\n    if request is None:\n        request = app.request_class(environ)\n    self.request = request\n    self.url_adapter = app.create_url_adapter(self.request)\n    self.flashes = None\n    self.session = None\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("这两个属性中request是一个Request()对象，这个对象就是我们在flask中使用的request对象，为我们提供了很多便捷的属性和方法，比如：request.method、request.form、request.args等等，另一个属性是session，初始为None。")]),s._v(" "),n("p",[s._v("紧接着执行ctx.push()方法，这个方法中，在执行请求上下文对象ctx之前先实例化了一个app_context对象，先执行了app_context的push方法，然后才执行"),n("em",[s._v("request_ctx_stack对象中的top和")]),s._v("request_ctx_stack.push(self)，最后对ctx中的session进行处理。")]),s._v(" "),n("p",[s._v("所以，"),n("strong",[s._v("flask中的应用上下文发生在请求上下文之前")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def push(self):\n\n        top = _request_ctx_stack.top\n        if top is not None and top.preserved:\n            top.pop(top._preserved_exc)\n\n        # 在执行request_context请求上下文的push方法时，先执行了app_context应用上下文的push方法\n        app_ctx = _app_ctx_stack.top\n        if app_ctx is None or app_ctx.app != self.app:\n            app_ctx = self.app.app_context()\n            app_ctx.push()\n            self._implicit_app_ctx_stack.append(app_ctx)\n        else:\n            self._implicit_app_ctx_stack.append(None)\n\n        if hasattr(sys, 'exc_clear'):\n            sys.exc_clear()\n\n        # 然后执行请求上下文对象中LocalStack对象的push方法\n        _request_ctx_stack.push(self)\n\n        # 最后处理session\n        if self.session is None:\n            session_interface = self.app.session_interface\n            self.session = session_interface.open_session(\n                self.app, self.request\n            )\n\n            if self.session is None:\n                self.session = session_interface.make_null_session(self.app)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br")])]),n("p",[s._v("但是我们先说请求上下文，在处理完应用上下文的push方法后，紧接着执行了_request_ctx_stack对象的两个方法。")]),s._v(" "),n("p",[s._v("而这个*request_ctx_stack是LocalStack这个类的对象。*request_ctx_stack = LocalStack()")]),s._v(" "),n("p",[s._v("LocalStack有没有很眼熟，没错，flask内部使用的机制就是类似于我们上文中自定义的LocalStack的机制，实例化过程中使用了面向对象中的组合概念，self._local = Local()，然后在自身又实现了push、pop、top方法，这三个方法中都是通过反射从Local类的实例化对象中对一个stack属性进行append、pop、[-1]的操作，所以，Local对象中的stack属性对应的值一定是一个类似于列表的东西。通过对列表的操作，实现一个类似于栈的存取。")]),s._v(" "),n("p",[s._v("接着聊聊这个Local类，在实例化时，会对每个对象生成一个storage的空字典。我们翻遍整个Local类的源码，发现内部并没有实现一个叫stack的方法或者属性，但是上面我们提到了LocalStack对象会对Local对象中的一个叫stack的东西进行一系列操作。找不到不会报错吗？")]),s._v(" "),n("p",[s._v("这就是flask的巧妙之处，通过类的一些魔法方法巧妙的实现了相应的处理。在前引中，提到如果对象中没有某个属性，取值时，最终会执行类中的"),n("strong",[s._v("getattr")]),s._v("方法，然后再做后续的异常处理，flask将所有的对应逻辑都实现在了类的"),n("strong",[s._v("getattr")]),s._v("方法中，将每一个线程存储到字典中，在请求进来时，将每一个对应的请求ctx存在一个列表中，使用时直接调用，而不是通过传参的形式，更体现出了flask框架的轻量级。")]),s._v(" "),n("p",[s._v("处理完_request_ctx_stack后，就该处理session了。")]),s._v(" "),n("p",[s._v("在flask中，处理session时，非常的巧妙，完美的遵循了开闭原则，会先执行session_interface对象的open_session方法，在这个方法中，会先从用户请求的cookie中获取sessionid，获取该用户之前设置的session值，然后将值赋值到ctx.session中。")]),s._v(" "),n("p",[s._v("处理完session后，ctx.push方法就执行完了，返回到最开始的app.wsgi_app方法中，执行完push方法后，接着执行full_dispatch_request方法，从这个名字中我们也能猜到，这个方法只要是负责请求的分发。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def full_dispatch_request(self):\n\n            self.try_trigger_before_first_request_functions()\n            try:\n                request_started.send(self)\n                rv = self.preprocess_request()\n                if rv is None:\n                    rv = self.dispatch_request()\n            except Exception as e:\n                rv = self.handle_user_exception(e)\n            return self.finalize_request(rv)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("在full_dispatch_request方法中先执行preprocess_request方法，这个方法，会先执行所有被before_request装饰器装饰的函数，然后就通过路由的分发执行视图函数了（dispatch_request）")]),s._v(" "),n("h3",{attrs:{id:"b-执行视图函数时"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#b-执行视图函数时"}},[s._v("#")]),s._v(" "),n("strong",[s._v("b. 执行视图函数时")])]),s._v(" "),n("p",[s._v("在执行视图函数之前，先执行了before_request，在执行我们的视图函数。")]),s._v(" "),n("p",[s._v("视图函数主要处理业务逻辑。在视图函数中可以调用request对象，进行取值，也可以调用session对象对session的存取。")]),s._v(" "),n("p",[s._v("在整个request的请求生命周期中，获取请求的数据直接调用request即可，对session进行操作直接调用session即可。request和session都是LocalProxy对象，借助偏函数的概念将对应的值传入"),n("em",[s._v("lookup_req_object函数。先从")]),s._v("request_ctx_stack（LocalStack）对象中获取ctx(请求上下文对象)，再通过反射分别获取request和session属性。整个过程中LocalStack扮演了一个全局仓库的角色，请求进来将数据存取，需要时即去即用。所以，flask实现了在整个请求的生命周期中哪儿需要就直接调用的特色。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("request = LocalProxy(partial(_lookup_req_object, 'request'))\nsession = LocalProxy(partial(_lookup_req_object, 'session'))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h3",{attrs:{id:"c-请求结束前"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#c-请求结束前"}},[s._v("#")]),s._v(" "),n("strong",[s._v("c. 请求结束前")])]),s._v(" "),n("p",[s._v("视图函数执行完后，dispatch_request执行结束，执行full_dispatch_request方法的返回值finalize_request方法。这个方法中，同样的，在返回响应之前，先执行所有被after_request装饰器装饰的函数。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("----\x3efinalize_request ------\x3e process_response\n def process_response(self, response):\n\n        ctx = _request_ctx_stack.top\n        bp = ctx.request.blueprint\n        funcs = ctx._after_request_functions\n        if bp is not None and bp in self.after_request_funcs:\n            funcs = chain(funcs, reversed(self.after_request_funcs[bp]))\n        if None in self.after_request_funcs:\n            funcs = chain(funcs, reversed(self.after_request_funcs[None]))\n        for handler in funcs:\n            response = handler(response)\n        if not self.session_interface.is_null_session(ctx.session):\n            self.session_interface.save_session(self, ctx.session, response)\n        return response\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("执行process_response过程中，执行完after_request后，然后，执行session的save_session方法。将内存中保存在ctx.session的值取到后，json.dumps()序列化后，写入响应的cookie中（set_cookie），最后返回响应。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    def save_session(self, app, session, response):\n        domain = self.get_cookie_domain(app)\n        path = self.get_cookie_path(app)\n\n        # If the session is modified to be empty, remove the cookie.\n        # If the session is empty, return without setting the cookie.\n        if not session:\n            if session.modified:\n                response.delete_cookie(\n                    app.session_cookie_name,\n                    domain=domain,\n                    path=path\n                )\n\n            return\n\n        # Add a \"Vary: Cookie\" header if the session was accessed at all.\n        if session.accessed:\n            response.vary.add('Cookie')\n\n        if not self.should_set_cookie(app, session):\n            return\n\n        httponly = self.get_cookie_httponly(app)\n        secure = self.get_cookie_secure(app)\n        samesite = self.get_cookie_samesite(app)\n        expires = self.get_expiration_time(app, session)\n        val = self.get_signing_serializer(app).dumps(dict(session))\n        # set_cookie将session写入响应的cookie中\n        response.set_cookie(\n            app.session_cookie_name,\n            val,\n            expires=expires,\n            httponly=httponly,\n            domain=domain,\n            path=path,\n            secure=secure,\n            samesite=samesite\n        )\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br")])]),n("p",[s._v("返回响应后，自动的调用"),n("strong",[s._v("ctx.auto_pop(error)")]),s._v("，将Local中存储的ctx对象pop掉，整个请求结束。")]),s._v(" "),n("p",[s._v("请求上下文的执行流程：")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://images2018.cnblogs.com/blog/1316789/201808/1316789-20180813170846967-1549165844.png",alt:"https://images2018.cnblogs.com/blog/1316789/201808/1316789-20180813170846967-1549165844.png"}})]),s._v(" "),n("h3",{attrs:{id:"_2-应用上下文"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-应用上下文"}},[s._v("#")]),s._v(" "),n("strong",[s._v("2 应用上下文")])]),s._v(" "),n("p",[s._v("与请求上下文类似，当请求进来时，先实例化一个AppContext对象app_ctx，在实例化的过程中，提供了两个有用的属性，一个是app，一个是g。self.app就是传入的全局的app对象，self.g是一个全局的存储值的对象。接着将这个app_ctx存放到LocalStack()。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class AppContext(object):\n\tdef __init__(self, app):\n\t\tself.app = app\n\t\tself.url_adapter = app.create_url_adapter(None)\n\t\tself.g = app.app_ctx_globals_class()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("视图函数中，我们就可以调用app对象和g对象，如果我们使用蓝图构建我们的项目时，在每一个直接引用app就会造成循环引用的异常，这时，应用上下文就会显得非常有用，我们可以直接调用current_app就可以在整个生命周期中使用我们的app对象了。比如使用我们的配置项：current_app.config")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("current_app = LocalProxy(_find_app)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("最后，当视图函数执行结束后，从storage中pop掉app_ctx对象。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("from flask import Flask,request,session,g\n\napp = Flask(__name__)  # type:Flask\n\n@app.before_request\ndef auth_demo():\n    g.val = 123\n\n@app.route('/')\ndef index():\n    print(g.val)\n    return \"Hello World\"\n\nif __name__ == '__main__':\n    app.run()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("总结：flask中的上下文管理机制分为请求上下文和应用上下文两大方面，通过上下文的管理机制，实现了即去即用的一个特色。")]),s._v(" "),n("h3",{attrs:{id:"a-应用g"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#a-应用g"}},[s._v("#")]),s._v(" "),n("strong",[s._v("a.应用g")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("from flask import Flask, g, request\n\napp = Flask(__name__)\n\n@app.before_request\ndef bf():\n    g.x = 666\n\n@app.route('/n1')\ndef n1():\n    print(g.x)  # 这样就可以共享全局的值了,都可以存在g中\n    return 'n1'\n\n@app.route('/n2')\ndef n2():\n    print(g.x)\n    return 'n2'\n\nif __name__ == '__main__':\n    app.run()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("h2",{attrs:{id:"day04"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#day04"}},[s._v("#")]),s._v(" "),n("strong",[s._v("day04")])]),s._v(" "),n("h3",{attrs:{id:"内容回顾-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内容回顾-2"}},[s._v("#")]),s._v(" "),n("strong",[s._v("内容回顾")])]),s._v(" "),n("h3",{attrs:{id:"今日内容-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#今日内容-2"}},[s._v("#")]),s._v(" "),n("strong",[s._v("今日内容")])]),s._v(" "),n("h3",{attrs:{id:"_1、flask-session"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、flask-session"}},[s._v("#")]),s._v(" "),n("strong",[s._v("1、flask_session")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("详细：<https://blog.csdn.net/weixin_43976393/article/details/87983656?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-1-87983656-blog-83781020.pc_relevant_antiscanv2&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-1-87983656-blog-83781020.pc_relevant_antiscanv2&utm_relevant_index=1>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("作用：将默认保存的签名cookie中的值，保存到redis/memcached/file/mangodb/SQLAlchemy中")]),s._v(" "),n("p",[n("strong",[s._v("注意：session中存储的是字典，修改字典内部元素时，会造成数据不更新，解决方法：")])]),s._v(" "),n("ul",[n("li",[s._v("motified = True")]),s._v(" "),n("li",[s._v("SESSION_REFRESH_EACH_REQUEST = True and session.permanent = True(redis中默认)")])]),s._v(" "),n("p",[n("strong",[s._v("存入session的方式，将session存入数据库中，不使用默认的了")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\"\"\"\n1. flask-session\n    作用：将默认保存的签名cookie中的值 保存到 redis/memcached/file/Mongodb/SQLAlchemy\n\"\"\"\nfrom flask import Flask, request, session\n\napp = Flask(__name__)\napp.secret_key = 'abasd'\n\n# 默认的session存储方式\nfrom flask.sessions import SecureCookieSessionInterface\napp.session_interface = SecureCookieSessionInterface()\n\n# 其他\n# 方式一：保存到redis中\nfrom redis import Redis\nfrom flask_session import RedisSessionInterface\n\napp.session_interface = RedisSessionInterface(\n    redis=Redis(host='127.0.0.1', port=6379),\n    key_prefix='rediszz'  # session的前缀\n)\n# 方式二 保存在redis中\nfrom flask_session import Session\nfrom redis import Redis\n\napp.config['SESSION_TYPE'] = 'REDIS'\napp.config['SESSION_REDIS'] = Redis(host='', db='', port='', password='', encoding='')\nSession(app)\n\n@app.route('/login', methods=['GET', 'POST'])\ndef login():\n    if request.method == 'GET':\n        return 'login'\n    user = request.form.get('user')\n    pwd = request.form.get('pwd')\n    session['user_info'] = {'user': user, 'pwd': pwd}\n    return 'login'\n\n@app.route('/index', methods=['GET'])\ndef index():\n    user_info = session.get('user_info')\n    return 'index'\n\nif __name__ == '__main__':\n    app.run()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br")])]),n("h3",{attrs:{id:"_2、数据库连接池"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、数据库连接池"}},[s._v("#")]),s._v(" "),n("strong",[s._v("2、数据库连接池")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("pip install DBUtils\n\n模式：\n  - 每个线程创建一个连接，关闭（默认不关闭），线程终止时，才关闭连接。\n  - 创建共享连接池\n应用：只要写原生SQL，用户数据框连接池\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"_3、wtforms"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、wtforms"}},[s._v("#")]),s._v(" "),n("strong",[s._v("3、wtforms")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("基本使用：<http://www.cnblogs.com/wupeiqi/articles/8202357.html>\n\n作用：用于对python web框架做表单验证。\n\n\t使用：\n\t\tclass MyForm(Form):\n\t\t\tuser = 类（正则,插件）\n\t\t\t字段 = 类（正则,插件）\n\t\t\t字段 = 类（正则,插件）\n\t\t\t字段 = 类（正则,插件）\n\t\t\t字段 = 类（正则,插件）\n\t\t\t字段 = 类（正则,插件）\n\n\t\tform = MyForm()\n\t\t# 生成HTML标签\n\t\tprint(form.user) 类.__str__ ==> 插件.xx方法\n\n\t\t# 验证\n\t\tform = MyForm(formdata=request.form)\n\t\tif form.validate():\n\t\t\t# 内部找到所有的字段：user + 用户发过来的数据 =》 正则校验\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("h2",{attrs:{id:"day05"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#day05"}},[s._v("#")]),s._v(" "),n("strong",[s._v("day05")])]),s._v(" "),n("h3",{attrs:{id:"内容回顾-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内容回顾-3"}},[s._v("#")]),s._v(" "),n("strong",[s._v("内容回顾")])]),s._v(" "),n("h3",{attrs:{id:"今日内容-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#今日内容-3"}},[s._v("#")]),s._v(" "),n("strong",[s._v("今日内容")])]),s._v(" "),n("h3",{attrs:{id:"_1、面向对象相关"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、面向对象相关"}},[s._v("#")]),s._v(" "),n("strong",[s._v("1、面向对象相关")])]),s._v(" "),n("h3",{attrs:{id:"_1-1-mro"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-mro"}},[s._v("#")]),s._v(" "),n("strong",[s._v("1.1 "),n("code",[s._v("__mro__")])])]),s._v(" "),n("p",[s._v("得到类继承的执行顺序")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class A(object):\n    pass\n\nclass B(A):\n    pass\n\nclass C(object):\n    pass\n\nclass D(B, C):\n    pass\n\nprint(D.__mro__)\n# 得到类继承的执行顺序\n# (<class '__main__.D'>, <class '__main__.B'>, <class '__main__.A'>, <class '__main__.C'>, <class 'object'>)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h3",{attrs:{id:"_1-2-dict"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-dict"}},[s._v("#")]),s._v(" "),n("strong",[s._v("1.2 "),n("code",[s._v("__dict__")])])]),s._v(" "),n("p",[s._v("以字典的形式查看对象或者字典的属性")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Foo(object):\n    CITY = 'bj'\n\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n\n    def func(self):\n        pass\n\n# print(Foo.CITY)\n# print(Foo.func)\n\n# 类的__ dict __ 属性\nprint(Foo.__dict__)\n\n# 类对象 的__ dict __ 属性\nobj1 = Foo('小明', 54)\nprint(obj1.__dict__)\n\n# __ dict __  查看对象其属性\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("h3",{attrs:{id:"_1-3-metaclass"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-metaclass"}},[s._v("#")]),s._v(" "),n("strong",[s._v("1.3 metaclass")])]),s._v(" "),n("h3",{attrs:{id:"_1-创建类的二种方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建类的二种方式"}},[s._v("#")]),s._v(" "),n("strong",[s._v("1. 创建类的二种方式")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 方式一：\nclass Foo(object):\n    CITY = \"bj\"\n\n    def func(self, x):\n        return x + 1\nfoo = Foo()\nprint(foo.func(10))\n\n# 方式二：\nFoo2 = type('Foo2', (object,), {'CITY': 'bj1', 'func': lambda self, x: x + 1})\nfoo2 = Foo2\nprint(foo2.CITY)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("h3",{attrs:{id:"_2-创建自定义的type类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建自定义的type类"}},[s._v("#")]),s._v(" "),n("strong",[s._v("2.创建自定义的type类")])]),s._v(" "),n("p",[n("strong",[s._v("因为类都是继承type去创建的，我们可以继承type,在其前后执行一些操作")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('\t1. 默认类由type实例化创建。\n    2. 某个类指定metaclass=MyType，那么当前类的所有派生类都由于MyType创建。\n    3. 实例化对象对象顺序\n      - type.__init__\n      - type.__call__\n      - 类.__new__\n      - 类.__init__\nclass MyType(type):\n    def __init__(self,*args,**kwargs):\n        print(\'创建类之前\')\n        super(MyType,self).__init__(*args,**kwargs)  # 创建FOO类\n        print(\'创建类之后\')\n\nclass Foo(object,metaclass=MyType): # 当前类，由type类创建。\n    CITY = "bj"\n    def func(self, x):\n        return x + 1\n# ############# 创建类 ###########\n# 1. 创建类的两种方式\n"""\nclass Foo(object,metaclass=type):\n    CITY = "bj"\n\n    def func(self,x):\n        return x + 1\n\nFoo = type(\'Foo\',(object,),{\'CITY\':\'bj\',\'func\':lambda self,x:x+1})\n"""\n\n# 2. 类由自定义type创建\n#    类由type创建，通过metaclass可以指定当前类由那一个type创建。\n"""\nclass MyType(type):\n    def __init__(self,*args,**kwargs):\n        print(\'创建类之前\')\n        super(MyType,self).__init__(*args,**kwargs)\n        print(\'创建类之后\')\n\nclass Foo(object,metaclass=MyType): # 当前类，由type类创建。\n    CITY = "bj"\n    def func(self, x):\n        return x + 1\n"""\n# 3. 类的继承\n#    类的基类中指定了metaclass，那么当前类也是由metaclass指定的类来创建当前类。\n"""\nclass MyType(type):\n    def __init__(self,*args,**kwargs):\n        print(\'创建类之前\')\n        super(MyType,self).__init__(*args,**kwargs)\n        print(\'创建类之后\')\n\nclass Foo(object,metaclass=MyType): # 当前类，由type类创建。\n    CITY = "bj"\n    def func(self, x):\n        return x + 1\n\nclass Bar(Foo):\n    pass\n"""\n\n# ################### 变 ##################\n"""\nclass MyType(type):\n    def __init__(self,*args,**kwargs):\n        print(\'创建类之前\')\n        super(MyType,self).__init__(*args,**kwargs)\n        print(\'创建类之后\')\n\nBase = MyType(\'Base\',(object,),{})\n# class Base(object,metaclass=MyType):\n#     pass\n\nclass Foo(Base):\n    CITY = "bj"\n    def func(self, x):\n        return x + 1\n"""\n# ################ 变 #################\n"""\nclass MyType(type):\n    def __init__(self,*args,**kwargs):\n        print(\'创建类之前\')\n        super(MyType,self).__init__(*args,**kwargs)\n        print(\'创建类之后\')\n\ndef with_metaclass(arg):\n    return MyType(\'Base\',(arg,),{}) # class Base(object,metaclass=MyType): pass\n\nclass Foo(with_metaclass(object)):\n    CITY = "bj"\n    def func(self, x):\n        return x + 1\n"""\n\n# ########################## 实例化 ######################\nclass MyType(type):\n    def __init__(self, *args, **kwargs):\n        super(MyType, self).__init__(*args, **kwargs)\n\nclass Foo(object, metaclass=MyType):  # 当前类，由type类创建。\n    pass\n\n"""\n内部执行顺序\n0. Mytype的__init__\nobj = Foo()\n1. MyType的__call__\n2. Foo的__new__\n3. Foo的__init__\n"""\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br"),n("span",{staticClass:"line-number"},[s._v("99")]),n("br"),n("span",{staticClass:"line-number"},[s._v("100")]),n("br"),n("span",{staticClass:"line-number"},[s._v("101")]),n("br"),n("span",{staticClass:"line-number"},[s._v("102")]),n("br"),n("span",{staticClass:"line-number"},[s._v("103")]),n("br"),n("span",{staticClass:"line-number"},[s._v("104")]),n("br"),n("span",{staticClass:"line-number"},[s._v("105")]),n("br"),n("span",{staticClass:"line-number"},[s._v("106")]),n("br"),n("span",{staticClass:"line-number"},[s._v("107")]),n("br"),n("span",{staticClass:"line-number"},[s._v("108")]),n("br"),n("span",{staticClass:"line-number"},[s._v("109")]),n("br"),n("span",{staticClass:"line-number"},[s._v("110")]),n("br"),n("span",{staticClass:"line-number"},[s._v("111")]),n("br")])]),n("h2",{attrs:{id:"dayo6"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dayo6"}},[s._v("#")]),s._v(" "),n("strong",[s._v("dayo6")])]),s._v(" "),n("h3",{attrs:{id:"内容回顾-4"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内容回顾-4"}},[s._v("#")]),s._v(" "),n("strong",[s._v("内容回顾")])]),s._v(" "),n("h3",{attrs:{id:"今日内容-4"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#今日内容-4"}},[s._v("#")]),s._v(" "),n("strong",[s._v("今日内容")])]),s._v(" "),n("h3",{attrs:{id:"_1、flask-script"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、flask-script"}},[s._v("#")]),s._v(" "),n("strong",[s._v("1、flask_script")])]),s._v(" "),n("ul",[n("li",[s._v("python "),n("a",{attrs:{href:"http://manage.py",target:"_blank",rel:"noopener noreferrer"}},[s._v("manage.py"),n("OutboundLink")],1),s._v(" runserver")]),s._v(" "),n("li",[s._v("python "),n("a",{attrs:{href:"http://manage.py",target:"_blank",rel:"noopener noreferrer"}},[s._v("manage.py"),n("OutboundLink")],1),s._v(" 自定义命令")])]),s._v(" "),n("p",[s._v("自定义脚本命令")]),s._v(" "),n("p",[s._v("a. pip install flask_script")]),s._v(" "),n("p",[s._v("b.manager = Manager(app)  # 传递app")]),s._v(" "),n("p",[s._v("c. manager.run()  # 改了就可以使用 python "),n("a",{attrs:{href:"http://manage.py",target:"_blank",rel:"noopener noreferrer"}},[s._v("manage.py"),n("OutboundLink")],1),s._v(" runserver运行")]),s._v(" "),n("p",[s._v("d.自定义命令脚本")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("from flask_migrate import Migrate\n\nfrom s8day130_pro import create_app,db\nfrom flask_script import Manager\n\napp = create_app()\nmanager = Manager(app)  # 传递app\n\n@manager.command\ndef custom(arg):  # 自定义脚本命令\n    \"\"\"\n    自定义命令\n    python manage.py custom 123\n    :param arg:\n    :return:\n    \"\"\"\n    print(arg)\n\n@manager.option('-n', '--name', dest='name')\n@manager.option('-u', '--url', dest='url')\ndef cmd(name, url):\n    \"\"\"\n    自定义命令\n    执行： python manage.py  cmd -n wupeiqi -u <http://www.oldboyedu.com>\n    执行： python manage.py  cmd --name wupeiqi --url <http://www.oldboyedu.com>\n    :param name:\n    :param url:\n    :return:\n    \"\"\"\n    print(name, url)\n\nif __name__ == '__main__':\n    # app.run()\n    manager.run()  # 改了就可以使用 python manage.py runserver运行\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br")])]),n("h3",{attrs:{id:"_2、flask-sqlalchemy"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、flask-sqlalchemy"}},[s._v("#")]),s._v(" "),n("strong",[s._v("2、flask-sqlalchemy")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("作用：将SQLAlchemy相关的所有功能都封装到db=flask_sqlalchemy.SQLAlchemy()对象中\n    - 创建表\n        class User(db.Model):\n        pass\n\n    - 操作表\n        db.session\n\n   扩展：离线脚本编写\n      from s8day130_pro import db\n      from s8day130_pro import create_app\n      from s8day130_pro import models\n\n      app = create_app()\n      with app.app_context():\n         # db.drop_all()\n         # db.create_all()\n         data = db.session.query(models.Users).all()\n         print(data)\n   步骤：\n      1. 在 __init__.py中创建db对象\n         from flask_sqlalchemy import SQLAlchemy\n\n         # 包含了SQLAlchemy相关的所有操作\n         db = SQLAlchemy()\n\n      2. 在 __init__.py中create_app函数中让将app传入到db中\n\n         def create_app():\n            app = Flask(__name__)\n            app.config.from_object('settings.DevelopmentConfig')\n\n            from .views.account import ac\n            app.register_blueprint(ac)\n\n            # 看这里看这里\n            db.init_app(app)\n\n            return app\n\n      3. 写配置文件，将连接字符串定义在配置文件中\n             SQLALCHEMY_DATABASE_URI = \"mysql+pymysql://root:123456@127.0.0.1:3306/s8day130db?charset=utf8\"\n            SQLALCHEMY_POOL_SIZE = 5\n            SQLALCHEMY_POOL_TIMEOUT = 30\n            SQLALCHEMY_POOL_RECYCLE = -1\n\n      4. 定义 s8day130_pro/models.py\n\n            #!/usr/bin/env python\n            # -*- coding:utf-8 -*-\n            from sqlalchemy.ext.declarative import declarative_base\n            from sqlalchemy import Column, Integer, String, UniqueConstraint, Index,DateTime,ForeignKey\n            from s8day130_pro import db\n\n            class Users(db.Model):\n               __tablename__ = 'users'\n               id = Column(Integer, primary_key=True,autoincrement=True)\n               name = Column(String(32),nullable=False,unique=True)\n\n      5. 创建数据库表，编写离线脚本：drop_create_table.py\n            from s8day130_pro import db\n            from s8day130_pro import create_app\n            from s8day130_pro import models\n\n            app = create_app()\n            with app.app_context():\n               db.drop_all()\n               db.create_all()\n               #data = db.session.query(models.Users).all()\n               #print(data)\n\n      6. 在视图函数中使用SQLAlchemy操作数据库\n            from s8day130_pro import models\n            from s8day130_pro import db\n            ac = blueprints.Blueprint('ac',__name__)\n\n            @ac.route('/login',methods=['GET','POST'])\n            def login():\n               data = db.session.query(models.Users).all()\n               print(data)\n               db.session.remove()\n               return 'Login'\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br")])]),n("h3",{attrs:{id:"_3、-sqlalchemy两种创建session的方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、-sqlalchemy两种创建session的方式"}},[s._v("#")]),s._v(" "),n("strong",[s._v("3、 SQLAlchemy两种创建session的方式")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('\t方式一：\n         import models\n         from threading import Thread\n         from sqlalchemy.orm import sessionmaker\n         from sqlalchemy import create_engine\n\n         engine =create_engine("mysql+pymysql://root:123456@127.0.0.1:3306/s8day128db?charset=utf8",pool_size=2,max_overflow=0)\n         XXXXXX = sessionmaker(bind=engine)\n\n         def task():\n            from sqlalchemy.orm.session import Session\n            session = XXXXXX()\n\n            data = session.query(models.Classes).all()\n            print(data)\n\n            session.close()\n\n         for i in range(10):\n            t = Thread(target=task)\n            t.start()\n\n      方式二（推荐）：\n         import models\n         from threading import Thread\n         from sqlalchemy.orm import sessionmaker\n         from sqlalchemy import create_engine\n         from sqlalchemy.orm import scoped_session\n\n         engine =create_engine("mysql+pymysql://root:123456@127.0.0.1:3306/s8day128db?charset=utf8",pool_size=2,max_overflow=0)\n         XXXXXX = sessionmaker(bind=engine)\n\n         session = scoped_session(XXXXXX)\n\n         def task():\n            # 1. 原来的session对象 = 执行session.registry()\n            # 2. 原来session对象.query\n            data = session.query(models.Classes).all()\n            print(data)\n            session.remove()\n\n         for i in range(10):\n            t = Thread(target=task)\n            t.start()\n\n   flask-session默认也是使用的第二种方式：scoped_session\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br")])]),n("h3",{attrs:{id:"_4、flask-migrate"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4、flask-migrate"}},[s._v("#")]),s._v(" "),n("strong",[s._v("4、flask-migrate")])]),s._v(" "),n("p",[s._v("帮助我们像django一样可以生成，迁移数据库")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('\t作用：做数据库迁移\n    依赖：\n      flask-script\n      flask-sqlalchemy\n\n   Migrate(app, db)\n   """\n   # 数据库迁移命名\n      python manage.py db init\n      python manage.py db migrate # makemigrations\n      python manage.py db upgrade # migrate\n   """\n   manager.add_command(\'db\', MigrateCommand)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("h3",{attrs:{id:"_5、多app应用-url进行处理和分发"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5、多app应用-url进行处理和分发"}},[s._v("#")]),s._v(" "),n("strong",[s._v("5、多app应用（url进行处理和分发）")])]),s._v(" "),n("p",[s._v("多个app一起启动通过前面加app名称去访问对应的app")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("- 多app应用（url进行处理和分发）\n   from flask import Flask\n   from werkzeug.wsgi import DispatcherMiddleware\n   from werkzeug.serving import run_simple\n\n   app01 = Flask('app01')\n   app02 = Flask('app02')\n\n   @app01.route('/login')\n   def login():\n      return 'app01.login'\n\n   @app02.route('/index')\n   def index():\n      return 'app02.index'\n\n   dm = DispatcherMiddleware(app01,{\n      '/app02':        app02,\n   })\n\n   if __name__ == '__main__':\n      run_simple('localhost', 5000,dm)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("h3",{attrs:{id:"_6、信号-blinker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6、信号-blinker"}},[s._v("#")]),s._v(" "),n("strong",[s._v("6、信号：blinker")])]),s._v(" "),n("p",[s._v("请求前，后，中执行信号")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("更多详细：<https://www.cnblogs.com/wupeiqi/articles/8249576.html>\n使用方式：<https://www.cnblogs.com/WiseAdministrator/articles/11217681.html>\n- 信号：blinker\n\n   appcontext_pushed = _signals.signal('appcontext-pushed')\n   request_started = _signals.signal('request-started')\n\n   如果有render:\n      before_render_template = _signals.signal('before-render-template')\n      template_rendered = _signals.signal('template-rendered')\n\n   request_finished = _signals.signal('request-finished')\n\n   如果视图函数有异常：\n      got_request_exception = _signals.signal('got-request-exception')\n\n   request_tearing_down = _signals.signal('request-tearing-down')\n   appcontext_tearing_down = _signals.signal('appcontext-tearing-down')\n\n   appcontext_popped = _signals.signal('appcontext-popped')\n\n   如果使用信号：\n      message_flashed = _signals.signal('message-flashed')\n\n   使用：\n      from flask import Flask,signals,render_template,flash\n\n      app = Flask(__name__)\n\n      def func1(*args,**kwargs):\n         print('触发信号:request_started')\n\n      def func2(*args,**kwargs):\n         print('触发信号:appcontext_pushed')\n\n      signals.request_started.connect(func1)\n      signals.appcontext_pushed.connect(func2)\n\n      @app.route('/login')\n      def login():\n         return render_template('index.html')\n\n      if __name__ == '__main__':\n         app.run()\n\n   问题：信号和before_request区别？\n\n        before_request，可以控制请求是否可以继续往后执行。\n        信号，在原来的基础增加额外的操作和值。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br")])]),n("p",[s._v("1")])])}),[],!1,null,null,null);n.default=t.exports}}]);