(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{348:function(t,a,n){t.exports=n.p+"assets/img/1.48e80f19.png"},349:function(t,a,n){t.exports=n.p+"assets/img/2.11c7a92c.png"},350:function(t,a,n){t.exports=n.p+"assets/img/3.65cea9d9.png"},351:function(t,a,n){t.exports=n.p+"assets/img/4.793b298c.png"},352:function(t,a,n){t.exports=n.p+"assets/img/5.6e445ba7.png"},353:function(t,a,n){t.exports=n.p+"assets/img/6.bca0db11.png"},354:function(t,a,n){t.exports=n.p+"assets/img/7.9e8bf9c8.png"},355:function(t,a,n){t.exports=n.p+"assets/img/8.b296eff7.png"},356:function(t,a,n){t.exports=n.p+"assets/img/9.2c5edb0b.png"},357:function(t,a,n){t.exports=n.p+"assets/img/10.e310ea53.png"},358:function(t,a,n){t.exports=n.p+"assets/img/12.c7504120.png"},359:function(t,a,n){t.exports=n.p+"assets/img/13.6430f548.png"},820:function(t,a,n){"use strict";n.r(a);var s=n(4),p=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),a("p",[t._v("写Python代码前，在自己电脑上安装上相关必备的软件的过程称为环境搭建。")]),t._v(" "),a("p",[t._v("许多初学者会纠结应该选择 2.x 版本还是 3.x 版本的问题，在我看来，世界变化的速度在变得更快，语言的更新速度速度亦然。没有什么理由让我们只停留在过去而不往前看。对于越来越普及、同时拥有诸多炫酷新特性的 Python 3.x，我们真的没有什么理由拒绝它。如果你理解了 life is short，you need Python 的苦衷，就更应该去选择这种「面向未来」的开发模式。")]),t._v(" "),a("h2",{attrs:{id:"链接资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链接资料"}},[t._v("#")]),t._v(" 链接资料")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("c语言中文网")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://c.biancheng.net/view/4161.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Windows安装Python（图解）"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[t._v("极客教程")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://geek-docs.com/python/python-basic/python-environment-configuration.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python 环境配置|极客教程"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[t._v("老男孩")])])]),t._v(" "),a("h2",{attrs:{id:"_1-win环境搭建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-win环境搭建"}},[t._v("#")]),t._v(" 1. win环境搭建")]),t._v(" "),a("h3",{attrs:{id:"_1-1-下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-下载"}},[t._v("#")]),t._v(" 1.1 下载")]),t._v(" "),a("p",[t._v("在 Windows 上安装"),a("a",{attrs:{href:"http://c.biancheng.net/python/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python"),a("OutboundLink")],1),t._v("和安装普通软件一样简单，下载安装包以后猛击“下一步”即可。")]),t._v(" "),a("p",[t._v("Python 安装包下载地址：")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.python.org/downloads/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Download Python"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("打开该链接，可以看到有两个版本的 Python，分别是 Python 3.x 和 Python 2.x，如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:n(348),alt:""}})]),t._v(" "),a("p",[t._v("点击上图中的版本号或者“Download”按钮进入对应版本的下载页面，滚动到最后即可看到各个平台的 Python 安装包。")]),t._v(" "),a("p",[a("img",{attrs:{src:n(349),alt:""}})]),t._v(" "),a("p",[t._v("对前缀的说明：")]),t._v(" "),a("ul",[a("li",[t._v("以"),a("code",[t._v("Windows x86-64")]),t._v("开头的是 64 位的 Python 安装程序；")]),t._v(" "),a("li",[t._v("1以"),a("code",[t._v("Windows x86")]),t._v("开头的是 32 位的 Python 安装程序。")])]),t._v(" "),a("p",[t._v("对后缀的说明：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("embeddable zip file")]),t._v("表示"),a("code",[t._v(".zip")]),t._v("格式的绿色免安装版本，可以直接嵌入（集成）到其它的应用程序中；")]),t._v(" "),a("li",[a("code",[t._v("executable installer")]),t._v("表示"),a("code",[t._v(".exe")]),t._v("格式的可执行程序，这是完整的离线安装包，一般选择这个即可；")]),t._v(" "),a("li",[a("code",[t._v("web-based installer")]),t._v("表示通过网络安装的，也就是说下载到的是一个空壳，安装过程中还需要联网下载真正的 Python 安装包。")])]),t._v(" "),a("h3",{attrs:{id:"_1-2-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-安装"}},[t._v("#")]),t._v(" 1.2 安装")]),t._v(" "),a("p",[t._v("这里我选择的是“Windows x86-64 executable installer”，也即 64 位的完整的离线安装包。")]),t._v(" "),a("p",[t._v("双击下载得到的 python-3.8.1-amd64.exe，就可以正式开始安装 Python 了，如图3所示。")]),t._v(" "),a("p",[a("img",{attrs:{src:n(350),alt:""}})]),t._v(" "),a("p",[t._v("请尽量勾选")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Add Python 3.8 to PATH\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("，这样可以将 Python 命令工具所在目录添加到系统 Path 环境变量中，以后开发程序或者运行 Python 命令会非常方便。")]),t._v(" "),a("p",[t._v("Python 支持两种安装方式，默认安装和自定义安装：")]),t._v(" "),a("ul",[a("li",[t._v("默认安装会勾选所有组件，并安装在 C 盘；")]),t._v(" "),a("li",[t._v("自定义安装可以手动选择要安装的组件，并安装到其它盘符。")])]),t._v(" "),a("p",[t._v("这里我们选择自定义安装，将 Python 安装到常用的目录，避免C盘文件过多。点击“Customize installation”进行入下一步，选择要安装的 Python 组件。")]),t._v(" "),a("p",[a("img",{attrs:{src:n(351),alt:""}})]),t._v(" "),a("p",[t._v("没有特殊要求的话，保持默认即可，也就是全部勾选。")]),t._v(" "),a("p",[t._v("点击“Next”继续，选择安装目录。")]),t._v(" "),a("p",[a("img",{attrs:{src:n(352),alt:""}})]),t._v(" "),a("p",[t._v("选择好你常用的安装目录，点击“Install”，等待几分钟就可以完成安装。")]),t._v(" "),a("p",[t._v("安装完成以后，打开 Windows 的命令行程序（命令提示符），在窗口中输入pytho图 6 运行 python 命令运行 python 命令启动的是 python 交互式编程环境，我们可以在")]),t._v(" "),a("p",[a("img",{attrs:{src:n(353),alt:""}})]),t._v(" "),a("p",[t._v("交互式写代码：Ctrl+Z")]),t._v(" "),a("p",[t._v("快捷键，或者输入 exit() 命令即可退出交互式编程环境，回到 Windows 命令行程序。")]),t._v(" "),a("h2",{attrs:{id:"_2-linux环境搭建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-linux环境搭建"}},[t._v("#")]),t._v(" 2. linux环境搭建")]),t._v(" "),a("h3",{attrs:{id:"_2-1-linux自带python2-x"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-linux自带python2-x"}},[t._v("#")]),t._v(" 2.1 linux自带python2.x")]),t._v(" "),a("p",[t._v("Linux 系统是为编程而生的，因此绝大多数的"),a("a",{attrs:{href:"http://c.biancheng.net/view/710.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Linux 发行版"),a("OutboundLink")],1),t._v("（Ubuntu、CentOS 等）都默认自带了")]),t._v(" "),a("p",[t._v("有的 Linux 发行版甚至还会自带两个版本的 Python，例如最新版的 Ubuntu 会自带 Python 2.x 和 Python 3.x。")]),t._v(" "),a("p",[t._v("打开 Linux 发行版内置的终端（Terminal），输入 python 命令就可以检测是否安装了 Python，以及安装了哪个版本，如下所示：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('[c.biancheng.net@localhost ~]$ python\nPython 2.7.5 (default, Jun 17 2014, 18:11:42)\n[GCC 4.8.2 20140120 (Red Hat 4.8.2-16)] on linux2\nType "help", "copyright", "credits" or "license" for more information.\n>>>\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("可以看到，命令能够正常运行，并输出了 Python 的版本信息，这表明当前的 Linux 发行版已经自带了 Python 2.7.5。")]),t._v(" "),a("p",[t._v("大部分的 Linux 发行版会自带 Python 2.x，但是不一定自带 Python 3.x，要想检测当前 Linux 发行版是否安装了 Python 3.x，可以在终端（Terminal）输入python3")]),t._v(" "),a("p",[t._v("命令，如下所示：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('[c.biancheng.net@localhost ~]$ Python3\nPython 3.6.4 (default , Nov 18 2018 , 13:02:36)\n[GCC 4.8.2 20140120 (Red Hat 4.8.2-16)] on linux2\nType "help","copyright","credits" or "license" for more information.\n>>>\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("如果 python3 命令运行成功，并出现 Python 提示符，则表明当前 Linux 发行版已经安装了 Python 3 开发环境，只需执行 python3命令就可以启动 Python 3 开发环境。")]),t._v(" "),a("p",[t._v("如果当前 Linux 发行版没有安装 Python 3，或者你觉得现有的 Python 3 版本不够新，那么就需要更新 Python 版本。本节我们以 Ubuntu 为例来进行演示。")]),t._v(" "),a("h3",{attrs:{id:"_2-2-更新-python-版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-更新-python-版本"}},[t._v("#")]),t._v(" 2.2 更新 Python 版本")]),t._v(" "),a("p",[t._v("在 Ubuntu 终端执行以下两条命令即可更新 Python 版本：")]),t._v(" "),a("p",[t._v("$sudo apt-get update$sudo apt-get install python3.8")]),t._v(" "),a("p",[t._v("对命令的说明：")]),t._v(" "),a("ul",[a("li",[t._v("第一条命令用来指定更新 /etc/apt/sources.list 和 /etc/apt/sources.list.d 所列出的源地址，这样能够保证获得最新的安装包。")]),t._v(" "),a("li",[t._v("第二条命令用来指定安装 Python 3.8，这是目前最新的 Python 版本。")])]),t._v(" "),a("p",[t._v("等待以上两条命令执行完成，再次在终端输入 python3 命令，就可以看到 Python 交互式编程环境已经更新到 Python 3.8。")]),t._v(" "),a("h3",{attrs:{id:"_2-3-重新安装-python"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-重新安装-python"}},[t._v("#")]),t._v(" 2.3 重新安装 Python")]),t._v(" "),a("p",[t._v("以上更新方法仅在 Ubuntu 已经安装 Python 的情况下才有效，如果你的 Ubuntu 中没有 Python 环境，或者你想重新安装，那么就得到官网下载源代码，然后自己编译。")]),t._v(" "),a("h4",{attrs:{id:"_1-下载源代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-下载源代码"}},[t._v("#")]),t._v(" 1. 下载源代码")]),t._v(" "),a("p",[t._v("Python 官方下载地址：")]),t._v(" "),a("p",[t._v("https://www.python.org/downloads/")]),t._v(" "),a("p",[t._v("打开链接，可以看到各个版本的 Python：")]),t._v(" "),a("p",[a("img",{attrs:{src:n(354),alt:""}})]),t._v(" "),a("p",[t._v("点击上图中的版本号或者“Download”按钮进入对应版本的下载页面，滚动到最后即可看到各个平台的 Python 安装包。")]),t._v(" "),a("p",[a("img",{attrs:{src:n(355),alt:""}})]),t._v(" "),a("p",[t._v("在“Gzipped source tarball”处单击鼠标右键，从弹出菜单中选择“复制链接地址”，即可得到 .tgz 格式的源码压缩包地址。")]),t._v(" "),a("p",[t._v("然后执行以下命令：")]),t._v(" "),a("p",[t._v("$ wget https://www.python.org/ftp/python/3.8.1/Python-3.8.1.tgz")]),t._v(" "),a("p",[t._v("解压源码包：")]),t._v(" "),a("p",[t._v("$ tar -zxvf Python-3.8.1.tgz")]),t._v(" "),a("h4",{attrs:{id:"_2-编译-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-编译-安装"}},[t._v("#")]),t._v(" 2. 编译/安装")]),t._v(" "),a("p",[t._v("使用 make 工具进行编译：")]),t._v(" "),a("p",[t._v("$ ./configure --prefix=/usr/local$ make&&sudo make install")]),t._v(" "),a("p",[t._v("这里的")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("--prefix=/usr/local\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("用于指定安装目录（建议指定）。如果不指定，就会使用默认的安装目录。")]),t._v(" "),a("p",[t._v("经过以上几个命令，我们就安装好了 Python，这时就可以进入终端，输入 Python 指令，验证是否已安装成功。")]),t._v(" "),a("h4",{attrs:{id:"_3-小技巧之建立软连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-小技巧之建立软连接"}},[t._v("#")]),t._v(" 3. 小技巧之建立软连接")]),t._v(" "),a("p",[t._v("python命令默认调用的是 Python 2.x 开发环境，如果你习惯使用 Python 3.x，感觉每次输入 python3命令有点麻烦，那么你可以修改配置，让 python")]),t._v(" "),a("p",[t._v("命令转而调用 Python 3.x 开发环境。具体命令如下：")]),t._v(" "),a("p",[t._v("$sudo unlink /usr/bin/python$sudo ln -s /usr/bin/python3.8 /usr/bin/python")]),t._v(" "),a("p",[t._v("注意，第二条命令中 Python 3.x 的路径和版本一定要正确。")]),t._v(" "),a("p",[t._v("上述命令执行完成以后，再次在终端输入 python")]),t._v(" "),a("p",[t._v("命令，进入的就是 Python 3.8 的交互式开发环境了。")]),t._v(" "),a("h2",{attrs:{id:"_3-pycharm安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-pycharm安装"}},[t._v("#")]),t._v(" 3. pycharm安装")]),t._v(" "),a("h3",{attrs:{id:"_3-1-下载安装pycharm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-下载安装pycharm"}},[t._v("#")]),t._v(" 3.1 下载安装pycharm")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("下载Pycahrm（专业版）")]),t._v(" "),a("p",[t._v("首先要下载Pycharm这个软件。官网的下载地址是:")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://www.jetbrains.com/pycharm/download/#section=windows",target:"_blank",rel:"noopener noreferrer"}},[t._v("Download PyCharm: Python IDE for Professional Developers by JetBrains"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("img",{attrs:{src:n(356),alt:""}})]),t._v(" "),a("p",[t._v("选择左边的点击进行下载,左边的是专业版（收费功能多）右边是社区版（免费功能少），推荐：专业版。")])]),t._v(" "),a("li",[a("p",[t._v("下载完成之后，双击打开进行安装")]),t._v(" "),a("p",[a("img",{attrs:{src:n(357),alt:""}})]),t._v(" "),a("p",[t._v("选择Next 点击")])]),t._v(" "),a("li",[a("p",[t._v("选择要安装到那个目录（根据自己情况）")]),t._v(" "),a("p",[a("img",{attrs:{src:n(358),alt:""}})])]),t._v(" "),a("li",[a("p",[t._v("选择配置")]),t._v(" "),a("p",[a("img",{attrs:{src:n(359),alt:""}})])]),t._v(" "),a("li",[a("p",[t._v("点击安装")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pythonav.com/media/uploads/2019/02/21/1548323987883.png",alt:"https://pythonav.com/media/uploads/2019/02/21/1548323987883.png"}})])]),t._v(" "),a("li",[a("p",[t._v("安装成功")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pythonav.com/media/uploads/2019/02/21/1548324124987.png",alt:"https://pythonav.com/media/uploads/2019/02/21/1548324124987.png"}})]),t._v(" "),a("p",[t._v("出现这个界面的直接点击Finish关闭就可以了。")]),t._v(" "),a("p",[t._v("至此，Pycharm的安装就完成了，接下来就可以使用Pycharm来进行编写并运行Python代码了。")])])]),t._v(" "),a("h3",{attrs:{id:"_3-2-用pycharm创建简单项目以及配置环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-用pycharm创建简单项目以及配置环境"}},[t._v("#")]),t._v(" "),a("strong",[t._v("3.2 用Pycharm创建简单项目以及配置环境")])]),t._v(" "),a("p",[t._v("首次打开Pycharm时，需要根据提示进行一些相关配置。")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("打开Pycharm（双击打开）")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pythonav.com/media/uploads/2020/02/23/open1.png?50",alt:"https://pythonav.com/media/uploads/2020/02/23/open1.png?50"}})])]),t._v(" "),a("li",[a("p",[t._v("首次使用Pychram提示，是否之前用过pycharm，如果用过可以导入之前代码存放目录。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pythonav.com/media/uploads/2019/02/21/1548326046866.png",alt:"https://pythonav.com/media/uploads/2019/02/21/1548326046866.png"}})])]),t._v(" "),a("li",[a("p",[t._v("首次使用Pychram提示，用户许可证（点击接受accept）")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pythonav.com/media/uploads/2019/02/21/1548326092371.png",alt:"https://pythonav.com/media/uploads/2019/02/21/1548326092371.png"}})])]),t._v(" "),a("li",[a("p",[t._v("首次使用Pychram提示，是否配置pycharm背景颜色字体等个性化配置。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pythonav.com/media/uploads/2020/02/23/o3.png?50",alt:"https://pythonav.com/media/uploads/2020/02/23/o3.png?50"}})])]),t._v(" "),a("li",[a("p",[t._v("首次使用pycharm提示，激活Pycharm（暂选择试用30天）。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pythonav.com/media/uploads/2020/02/23/o4.png?50",alt:"https://pythonav.com/media/uploads/2020/02/23/o4.png?50"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pythonav.com/media/uploads/2020/02/23/o5.png?50",alt:"https://pythonav.com/media/uploads/2020/02/23/o5.png?50"}})])])]),t._v(" "),a("p",[t._v("至此，首次使用Pycharm的配置就完成了，接下来就是使用Pycharm写代码并运行的过程了。")]),t._v(" "),a("p",[a("strong",[t._v("写代码&运行")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("创建项目，其实就是创建一个文件夹。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pythonav.com/media/uploads/2020/02/23/o6.png?50",alt:"https://pythonav.com/media/uploads/2020/02/23/o6.png?50"}})])]),t._v(" "),a("li",[a("p",[t._v("指定项名和Python解释器路径")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pythonav.com/media/uploads/2020/02/23/o7.png?50",alt:"https://pythonav.com/media/uploads/2020/02/23/o7.png?50"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pythonav.com/media/uploads/2020/02/23/o9.png?50",alt:"https://pythonav.com/media/uploads/2020/02/23/o9.png?50"}})])]),t._v(" "),a("li",[a("p",[t._v("PyCharm创建py文件")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pythonav.com/media/uploads/2020/02/23/o10.png?50",alt:"https://pythonav.com/media/uploads/2020/02/23/o10.png?50"}})])]),t._v(" "),a("li",[a("p",[t._v("写代码 & 运行")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://pythonav.com/media/uploads/2020/02/23/o11.png?50",alt:"https://pythonav.com/media/uploads/2020/02/23/o11.png?50"}})])])]),t._v(" "),a("p",[t._v("至此，你就学会了使用Pycharm来编写Python代码并运行了，以后写代码这个事就变得非常简单了。")]),t._v(" "),a("h3",{attrs:{id:"_3-3-破解版"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-破解版"}},[t._v("#")]),t._v(" 3.3 破解版")])])}),[],!1,null,null,null);a.default=p.exports}}]);