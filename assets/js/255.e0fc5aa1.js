(window.webpackJsonp=window.webpackJsonp||[]).push([[255],{1033:function(s,n,a){"use strict";a.r(n);var e=a(4),t=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"viper-配置管理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#viper-配置管理"}},[s._v("#")]),s._v(" "),n("strong",[s._v("Viper 配置管理")])]),s._v(" "),n("h2",{attrs:{id:"链接资料"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#链接资料"}},[s._v("#")]),s._v(" 链接资料")]),s._v(" "),n("ol",[n("li",[s._v("博客")])]),s._v(" "),n("p",[n("a",{attrs:{href:"https://www.liwenzhou.com/posts/Go/viper/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Go语言配置管理神器——Viper中文教程 - 李文周的博客"),n("OutboundLink")],1)]),s._v(" "),n("ol",[n("li",[s._v("github")])]),s._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/spf13/viper/blob/master/README.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("viper/README.md at master · spf13/viper"),n("OutboundLink")],1)]),s._v(" "),n("h2",{attrs:{id:"介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[s._v("#")]),s._v(" 介绍")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/spf13/viper",target:"_blank",rel:"noopener noreferrer"}},[s._v("Viper"),n("OutboundLink")],1),s._v("是适用于Go应用程序的完整配置解决方案。它被设计用于在应用程序中工作，并且可以处理所有类型的配置需求和格式。")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/spf13/viper",target:"_blank",rel:"noopener noreferrer"}},[s._v("Viper"),n("OutboundLink")],1),s._v("是适用于Go应用程序的完整配置解决方案。它被设计用于在应用程序中工作，并且可以处理所有类型的配置需求和格式。")]),s._v(" "),n("p",[s._v("鉴于"),n("code",[s._v("viper")]),s._v("库本身的README已经写得十分详细，这里就将其翻译成中文，并在最后附上两个项目中使用"),n("code",[s._v("viper")]),s._v("的示例代码以供参考。")]),s._v(" "),n("h2",{attrs:{id:"安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),n("div",{staticClass:"language-Go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("go")]),s._v(" get github"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("spf13"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("viper\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h2",{attrs:{id:"什么是viper"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是viper"}},[s._v("#")]),s._v(" 什么是Viper？")]),s._v(" "),n("p",[s._v("Viper是适用于Go应用程序（包括"),n("code",[s._v("Twelve-Factor App")]),s._v("）的完整配置解决方案。它被设计用于在应用程序中工作，并且可以处理所有类型的配置需求和格式。它支持以下特性：")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("设置默认值")])]),s._v(" "),n("li",[n("p",[s._v("从"),n("code",[s._v("JSON")]),s._v("、"),n("code",[s._v("TOML")]),s._v("、"),n("code",[s._v("YAML")]),s._v("、"),n("code",[s._v("HCL")]),s._v("、"),n("code",[s._v("envfile")]),s._v("和"),n("code",[s._v("Java properties")]),s._v("格式的配置文件读取配置信息")])]),s._v(" "),n("li",[n("p",[s._v("实时监控和重新读取配置文件（可选）")])]),s._v(" "),n("li",[n("p",[s._v("从环境变量中读取")])]),s._v(" "),n("li",[n("p",[s._v("从远程配置系统（etcd或Consul）读取并监控配置变化")])]),s._v(" "),n("li",[n("p",[s._v("从命令行参数读取配置")])]),s._v(" "),n("li",[n("p",[s._v("从buffer读取配置")])]),s._v(" "),n("li",[n("p",[s._v("显式配置值")])])]),s._v(" "),n("h2",{attrs:{id:"为什么选择viper"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么选择viper"}},[s._v("#")]),s._v(" 为什么选择Viper?")]),s._v(" "),n("p",[s._v("在构建现代应用程序时，你无需担心配置文件格式；你想要专注于构建出色的软件。Viper的出现就是为了在这方面帮助你的。")]),s._v(" "),n("p",[s._v("Viper能够为你执行下列操作：")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("查找、加载和反序列化"),n("code",[s._v("JSON")]),s._v("、"),n("code",[s._v("TOML")]),s._v("、"),n("code",[s._v("YAML")]),s._v("、"),n("code",[s._v("HCL")]),s._v("、"),n("code",[s._v("INI")]),s._v("、"),n("code",[s._v("envfile")]),s._v("和"),n("code",[s._v("Java properties")]),s._v("格式的配置文件。")])]),s._v(" "),n("li",[n("p",[s._v("提供一种机制为你的不同配置选项设置默认值。")])]),s._v(" "),n("li",[n("p",[s._v("提供一种机制来通过命令行参数覆盖指定选项的值。")])]),s._v(" "),n("li",[n("p",[s._v("提供别名系统，以便在不破坏现有代码的情况下轻松重命名参数。")])]),s._v(" "),n("li",[n("p",[s._v("当用户提供了与默认值相同的命令行或配置文件时，可以很容易地分辨出它们之间的区别。")])])]),s._v(" "),n("p",[s._v("Viper会按照下面的优先级。每个项目的优先级都高于它下面的项目:")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("显示调用"),n("code",[s._v("Set")]),s._v("设置值")])]),s._v(" "),n("li",[n("p",[s._v("命令行参数（flag）")])]),s._v(" "),n("li",[n("p",[s._v("环境变量")])]),s._v(" "),n("li",[n("p",[s._v("配置文件")])]),s._v(" "),n("li",[n("p",[s._v("key/value存储")])]),s._v(" "),n("li",[n("p",[s._v("默认值")])])]),s._v(" "),n("p",[n("strong",[s._v("重要：")]),s._v(" 目前Viper配置的键（Key）是大小写不敏感的。目前正在讨论是否将这一选项设为可选。")]),s._v(" "),n("h2",{attrs:{id:"把值存入viper"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#把值存入viper"}},[s._v("#")]),s._v(" 把值存入Viper")]),s._v(" "),n("h3",{attrs:{id:"建立默认值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#建立默认值"}},[s._v("#")]),s._v(" 建立默认值")]),s._v(" "),n("p",[s._v("一个好的配置系统应该支持默认值。键不需要默认值，但如果没有通过配置文件、环境变量、远程配置或命令行标志（flag）设置键，则默认值非常有用。")]),s._v(" "),n("p",[s._v("例如：")]),s._v(" "),n("div",{staticClass:"language-Go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[s._v("viper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("SetDefault")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ContentDir"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"content"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nviper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("SetDefault")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"LayoutDir"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"layouts"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nviper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("SetDefault")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Taxonomies"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tag"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tags"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"category"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"categories"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h3",{attrs:{id:"读取配置文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#读取配置文件"}},[s._v("#")]),s._v(" 读取配置文件")]),s._v(" "),n("p",[s._v("Viper需要最少知道在哪里查找配置文件的配置。Viper支持"),n("code",[s._v("JSON")]),s._v("、"),n("code",[s._v("TOML")]),s._v("、"),n("code",[s._v("YAML")]),s._v("、"),n("code",[s._v("HCL")]),s._v("、"),n("code",[s._v("envfile")]),s._v("和"),n("code",[s._v("Java properties")]),s._v("格式的配置文件。Viper可以搜索多个路径，但目前单个Viper实例只支持单个配置文件。Viper不默认任何配置搜索路径，将默认决策留给应用程序。")]),s._v(" "),n("p",[s._v("下面是一个如何使用Viper搜索和读取配置文件的示例。不需要任何特定的路径，但是至少应该提供一个配置文件预期出现的路径。")]),s._v(" "),n("div",{staticClass:"language-Go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[s._v("viper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("SetConfigFile")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./config.yaml"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 指定配置文件路径")]),s._v("\nviper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("SetConfigName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"config"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 配置文件名称(无扩展名)")]),s._v("\nviper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("SetConfigType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yaml"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果配置文件的名称中没有扩展名，则需要配置此项")]),s._v("\nviper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("AddConfigPath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/etc/appname/"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 查找配置文件所在的路径")]),s._v("\nviper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("AddConfigPath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$HOME/.appname"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 多次调用以添加多个搜索路径")]),s._v("\nviper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("AddConfigPath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 还可以在工作目录中查找配置")]),s._v("\nerr "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" viper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ReadInConfig")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 查找并读取配置文件")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 处理读取配置文件的错误")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("panic")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Errorf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fatal error config file: %s \\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("在加载配置文件出错时，你可以像下面这样处理找不到配置文件的特定情况：")]),s._v(" "),n("div",{staticClass:"language-Go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" viper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ReadInConfig")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" err "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("_")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ok "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("viper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ConfigFileNotFoundError"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" ok "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 配置文件未找到错误；如果需要可以忽略")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 配置文件被找到，但产生了另外的错误")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 配置文件找到并成功解析")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[n("em",[s._v("注意[自1.6起]：")]),s._v(" 你也可以有不带扩展名的文件，并以编程方式指定其格式。对于位于用户"),n("code",[s._v("$HOME")]),s._v("目录中的配置文件没有任何扩展名，如"),n("code",[s._v(".bashrc")]),s._v("。")]),s._v(" "),n("p",[n("strong",[s._v("这里补充两个问题供读者解答并自行验证")])]),s._v(" "),n("p",[s._v("当你使用如下方式读取配置时，viper会从"),n("code",[s._v("./conf")]),s._v("目录下查找任何以"),n("code",[s._v("config")]),s._v("为文件名的配置文件，如果同时存在"),n("code",[s._v("./conf/config.json")]),s._v("和"),n("code",[s._v("./conf/config.yaml")]),s._v("两个配置文件的话，"),n("code",[s._v("viper")]),s._v("会从哪个配置文件加载配置呢？")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('viper.SetConfigName("config")\nviper.AddConfigPath("./conf")\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("在上面两个语句下搭配使用"),n("code",[s._v('viper.SetConfigType("yaml")')]),s._v("指定配置文件类型可以实现预期的效果吗？")]),s._v(" "),n("h4",{attrs:{id:"写入配置文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#写入配置文件"}},[s._v("#")]),s._v(" 写入配置文件")]),s._v(" "),n("p",[s._v("从配置文件中读取配置文件是有用的，但是有时你想要存储在运行时所做的所有修改。为此，可以使用下面一组命令，每个命令都有自己的用途:")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("WriteConfig - 将当前的"),n("code",[s._v("viper")]),s._v("配置写入预定义的路径并覆盖（如果存在的话）。如果没有预定义的路径，则报错。")])]),s._v(" "),n("li",[n("p",[s._v("SafeWriteConfig - 将当前的"),n("code",[s._v("viper")]),s._v("配置写入预定义的路径。如果没有预定义的路径，则报错。如果存在，将不会覆盖当前的配置文件。")])]),s._v(" "),n("li",[n("p",[s._v("WriteConfigAs - 将当前的"),n("code",[s._v("viper")]),s._v("配置写入给定的文件路径。将覆盖给定的文件(如果它存在的话)。")])]),s._v(" "),n("li",[n("p",[s._v("SafeWriteConfigAs - 将当前的"),n("code",[s._v("viper")]),s._v("配置写入给定的文件路径。不会覆盖给定的文件(如果它存在的话)。")])])]),s._v(" "),n("p",[s._v("根据经验，标记为"),n("code",[s._v("safe")]),s._v("的所有方法都不会覆盖任何文件，而是直接创建（如果不存在），而默认行为是创建或截断。")]),s._v(" "),n("p",[s._v("一个小示例：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('viper.WriteConfig() // 将当前配置写入“viper.AddConfigPath()”和“viper.SetConfigName”设置的预定义路径\nviper.SafeWriteConfig()\nviper.WriteConfigAs("/path/to/my/.config")\nviper.SafeWriteConfigAs("/path/to/my/.config") // 因为该配置文件写入过，所以会报错\nviper.SafeWriteConfigAs("/path/to/my/.other_config")\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h4",{attrs:{id:"监控并重新读取配置文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#监控并重新读取配置文件"}},[s._v("#")]),s._v(" 监控并重新读取配置文件")]),s._v(" "),n("p",[s._v("Viper支持在运行时实时读取配置文件的功能。")]),s._v(" "),n("p",[s._v("需要重新启动服务器以使配置生效的日子已经一去不复返了，viper驱动的应用程序可以在运行时读取配置文件的更新，而不会错过任何消息。")]),s._v(" "),n("p",[s._v("只需告诉viper实例watchConfig。可选地，你可以为Viper提供一个回调函数，以便在每次发生更改时运行。")]),s._v(" "),n("p",[n("strong",[s._v("确保在调用")]),n("code",[s._v("WatchConfig()")]),s._v(" "),n("strong",[s._v("之前添加了所有的配置路径。")])]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('viper.WatchConfig()\nviper.OnConfigChange(func(e fsnotify.Event) {\n  // 配置文件发生变更之后会调用的回调函数\n\tfmt.Println("Config file changed:", e.Name)\n})\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h4",{attrs:{id:"从io-reader读取配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#从io-reader读取配置"}},[s._v("#")]),s._v(" 从io.Reader读取配置")]),s._v(" "),n("p",[s._v("Viper预先定义了许多配置源，如文件、环境变量、标志和远程K/V存储，但你不受其约束。你还可以实现自己所需的配置源并将其提供给viper。")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('viper.SetConfigType("yaml") // 或者 viper.SetConfigType("YAML")\n\n// 任何需要将此配置添加到程序中的方法。\nvar yamlExample = []byte(`\nHacker: true\nname: steve\nhobbies:\n- skateboarding\n- snowboarding\n- go\nclothing:\n  jacket: leather\n  trousers: denim\nage: 35\neyes : brown\nbeard: true\n`)\n\nviper.ReadConfig(bytes.NewBuffer(yamlExample))\n\nviper.Get("name") // 这里会得到 "steve"\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("h4",{attrs:{id:"覆盖设置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#覆盖设置"}},[s._v("#")]),s._v(" 覆盖设置")]),s._v(" "),n("p",[s._v("这些可能来自命令行标志，也可能来自你自己的应用程序逻辑。")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('viper.Set("Verbose", true)\nviper.Set("LogFile", LogFile)\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h4",{attrs:{id:"注册和使用别名"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#注册和使用别名"}},[s._v("#")]),s._v(" 注册和使用别名")]),s._v(" "),n("p",[s._v("别名允许多个键引用单个值")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('viper.RegisterAlias("loud", "Verbose")  // 注册别名（此处loud和Verbose建立了别名）\n\nviper.Set("verbose", true) // 结果与下一行相同\nviper.Set("loud", true)   // 结果与前一行相同\n\nviper.GetBool("loud") // true\nviper.GetBool("verbose") // true\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h4",{attrs:{id:"使用环境变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用环境变量"}},[s._v("#")]),s._v(" 使用环境变量")]),s._v(" "),n("p",[s._v("Viper完全支持环境变量。这使"),n("code",[s._v("Twelve-Factor App")]),s._v("开箱即用。有五种方法可以帮助与ENV协作:")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("AutomaticEnv()")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("BindEnv(string...) : error")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("SetEnvPrefix(string)")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("SetEnvKeyReplacer(string...) strings.Replacer")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("AllowEmptyEnv(bool)")])])])]),s._v(" "),n("p",[n("em",[s._v("使用ENV变量时，务必要意识到Viper将ENV变量视为区分大小写。")])]),s._v(" "),n("p",[s._v("Viper提供了一种机制来确保ENV变量是惟一的。通过使用"),n("code",[s._v("SetEnvPrefix")]),s._v("，你可以告诉Viper在读取环境变量时使用前缀。"),n("code",[s._v("BindEnv")]),s._v("和"),n("code",[s._v("AutomaticEnv")]),s._v("都将使用这个前缀。")]),s._v(" "),n("p",[n("code",[s._v("BindEnv")]),s._v("使用一个或两个参数。第一个参数是键名称，第二个是环境变量的名称。环境变量的名称区分大小写。如果没有提供ENV变量名，那么Viper将自动假设ENV变量与以下格式匹配：前缀+ “_” +键名全部大写。当你显式提供ENV变量名（第二个参数）时，它 "),n("strong",[s._v("不会")]),s._v(" 自动添加前缀。例如，如果第二个参数是“id”，Viper将查找环境变量“ID”。")]),s._v(" "),n("p",[s._v("在使用ENV变量时，需要注意的一件重要事情是，每次访问该值时都将读取它。Viper在调用"),n("code",[s._v("BindEnv")]),s._v("时不固定该值。")]),s._v(" "),n("p",[n("code",[s._v("AutomaticEnv")]),s._v("是一个强大的助手，尤其是与"),n("code",[s._v("SetEnvPrefix")]),s._v("结合使用时。调用时，Viper会在发出"),n("code",[s._v("viper.Get")]),s._v("请求时随时检查环境变量。它将应用以下规则。它将检查环境变量的名称是否与键匹配（如果设置了"),n("code",[s._v("EnvPrefix")]),s._v("）。")]),s._v(" "),n("p",[n("code",[s._v("SetEnvKeyReplacer")]),s._v("允许你使用"),n("code",[s._v("strings.Replacer")]),s._v("对象在一定程度上重写 Env 键。如果你希望在"),n("code",[s._v("Get()")]),s._v("调用中使用"),n("code",[s._v("-")]),s._v("或者其他什么符号，但是环境变量里使用"),n("code",[s._v("_")]),s._v("分隔符，那么这个功能是非常有用的。可以在"),n("code",[s._v("viper_test.go")]),s._v("中找到它的使用示例。")]),s._v(" "),n("p",[s._v("或者，你可以使用带有"),n("code",[s._v("NewWithOptions")]),s._v("工厂函数的"),n("code",[s._v("EnvKeyReplacer")]),s._v("。与"),n("code",[s._v("SetEnvKeyReplacer")]),s._v("不同，它接受"),n("code",[s._v("StringReplacer")]),s._v("接口，允许你编写自定义字符串替换逻辑。")]),s._v(" "),n("p",[s._v("默认情况下，空环境变量被认为是未设置的，并将返回到下一个配置源。若要将空环境变量视为已设置，请使用"),n("code",[s._v("AllowEmptyEnv")]),s._v("方法。")]),s._v(" "),n("h4",{attrs:{id:"env-示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#env-示例"}},[s._v("#")]),s._v(" Env 示例：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('SetEnvPrefix("spf") // 将自动转为大写\nBindEnv("id")\n\nos.Setenv("SPF_ID", "13") // 通常是在应用程序之外完成的\n\nid := Get("id") // 13\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h4",{attrs:{id:"使用flags"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用flags"}},[s._v("#")]),s._v(" 使用Flags")]),s._v(" "),n("p",[s._v("Viper 具有绑定到标志的能力。具体来说，Viper支持"),n("a",{attrs:{href:"https://github.com/spf13/cobra",target:"_blank",rel:"noopener noreferrer"}},[s._v("Cobra"),n("OutboundLink")],1),s._v("库中使用的"),n("code",[s._v("Pflag")]),s._v("。")]),s._v(" "),n("p",[s._v("与"),n("code",[s._v("BindEnv")]),s._v("类似，该值不是在调用绑定方法时设置的，而是在访问该方法时设置的。这意味着你可以根据需要尽早进行绑定，即使在"),n("code",[s._v("init()")]),s._v("函数中也是如此。")]),s._v(" "),n("p",[s._v("对于单个标志，"),n("code",[s._v("BindPFlag()")]),s._v("方法提供此功能。")]),s._v(" "),n("p",[s._v("例如：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('serverCmd.Flags().Int("port", 1138, "Port to run Application server on")\nviper.BindPFlag("port", serverCmd.Flags().Lookup("port"))\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("你还可以绑定一组现有的pflags （pflag.FlagSet）：")]),s._v(" "),n("p",[s._v("举个例子：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('pflag.Int("flagname", 1234, "help message for flagname")\n\npflag.Parse()\nviper.BindPFlags(pflag.CommandLine)\n\ni := viper.GetInt("flagname") // 从viper而不是从pflag检索值\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("在 Viper 中使用 pflag 并不阻碍其他包中使用标准库中的 flag 包。pflag 包可以通过导入这些 flags 来处理flag包定义的flags。这是通过调用pflag包提供的便利函数"),n("code",[s._v("AddGoFlagSet()")]),s._v("来实现的。")]),s._v(" "),n("p",[s._v("例如：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('package main\n\nimport (\n\t"flag"\n\t"github.com/spf13/pflag"\n)\n\nfunc main() {\n\n\t// 使用标准库 "flag" 包\n\tflag.Int("flagname", 1234, "help message for flagname")\n\n\tpflag.CommandLine.AddGoFlagSet(flag.CommandLine)\n\tpflag.Parse()\n\tviper.BindPFlags(pflag.CommandLine)\n\n\ti := viper.GetInt("flagname") // 从 viper 检索值\n\n\t...\n}\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("h4",{attrs:{id:"flag接口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#flag接口"}},[s._v("#")]),s._v(" flag接口")]),s._v(" "),n("p",[s._v("如果你不使用"),n("code",[s._v("Pflag")]),s._v("，Viper 提供了两个Go接口来绑定其他 flag 系统。")]),s._v(" "),n("p",[n("code",[s._v("FlagValue")]),s._v("表示单个flag。这是一个关于如何实现这个接口的非常简单的例子：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('type myFlag struct {}\nfunc (f myFlag) HasChanged() bool { return false }\nfunc (f myFlag) Name() string { return "my-flag-name" }\nfunc (f myFlag) ValueString() string { return "my-flag-value" }\nfunc (f myFlag) ValueType() string { return "string" }\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("一旦你的 flag 实现了这个接口，你可以很方便地告诉Viper绑定它：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('viper.BindFlagValue("my-flag-name", myFlag{})\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("code",[s._v("FlagValueSet")]),s._v("代表一组 flags 。这是一个关于如何实现这个接口的非常简单的例子:")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("type myFlagSet struct {\n\tflags []myFlag\n}\n\nfunc (f myFlagSet) VisitAll(fn func(FlagValue)) {\n\tfor _, flag := range flags {\n\t\tfn(flag)\n\t}\n}\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("一旦你的flag set实现了这个接口，你就可以很方便地告诉Viper绑定它：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('fSet := myFlagSet{\n\tflags: []myFlag{myFlag{}, myFlag{}},\n}\nviper.BindFlagValues("my-flags", fSet)\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h4",{attrs:{id:"远程key-value存储支持"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#远程key-value存储支持"}},[s._v("#")]),s._v(" 远程Key/Value存储支持")]),s._v(" "),n("p",[s._v("在Viper中启用远程支持，需要在代码中匿名导入"),n("code",[s._v("viper/remote")]),s._v("这个包。")]),s._v(" "),n("p",[n("code",[s._v('import _ "github.com/spf13/viper/remote"')])]),s._v(" "),n("p",[s._v("Viper将读取从Key/Value存储（例如etcd或Consul）中的路径检索到的配置字符串（如"),n("code",[s._v("JSON")]),s._v("、"),n("code",[s._v("TOML")]),s._v("、"),n("code",[s._v("YAML")]),s._v("、"),n("code",[s._v("HCL")]),s._v("、"),n("code",[s._v("envfile")]),s._v("和"),n("code",[s._v("Java properties")]),s._v("格式）。这些值的优先级高于默认值，但是会被从磁盘、flag或环境变量检索到的配置值覆盖。（译注：也就是说Viper加载配置值的优先级为：磁盘上的配置文件>命令行标志位>环境变量>远程Key/Value存储>默认值。）")]),s._v(" "),n("p",[s._v("Viper使用"),n("a",{attrs:{href:"https://github.com/bketelsen/crypt",target:"_blank",rel:"noopener noreferrer"}},[s._v("crypt"),n("OutboundLink")],1),s._v("从K/V存储中检索配置，这意味着如果你有正确的gpg密匙，你可以将配置值加密存储并自动解密。加密是可选的。")]),s._v(" "),n("p",[s._v("你可以将远程配置与本地配置结合使用，也可以独立使用。")]),s._v(" "),n("p",[n("code",[s._v("crypt")]),s._v("有一个命令行助手，你可以使用它将配置放入K/V存储中。"),n("code",[s._v("crypt")]),s._v("默认使用在"),n("a",{attrs:{href:"http://127.0.0.1:4001/",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://127.0.0.1:4001"),n("OutboundLink")],1),s._v("的etcd。")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("$ go get github.com/bketelsen/crypt/bin/crypt\n$ crypt set -plaintext /config/hugo.json /Users/hugo/settings/config.json\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("确认值已经设置：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("$ crypt get -plaintext /config/hugo.json\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("有关如何设置加密值或如何使用Consul的示例，请参见"),n("code",[s._v("crypt")]),s._v("文档。")]),s._v(" "),n("h4",{attrs:{id:"远程key-value存储示例-未加密"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#远程key-value存储示例-未加密"}},[s._v("#")]),s._v(" 远程Key/Value存储示例-未加密")]),s._v(" "),n("h4",{attrs:{id:"etcd"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#etcd"}},[s._v("#")]),s._v(" etcd")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('viper.AddRemoteProvider("etcd", "http://127.0.0.1:4001","/config/hugo.json")\nviper.SetConfigType("json") // 因为在字节流中没有文件扩展名，所以这里需要设置下类型。支持的扩展名有 "json", "toml", "yaml", "yml", "properties", "props", "prop", "env", "dotenv"\nerr := viper.ReadRemoteConfig()\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h4",{attrs:{id:"consul"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#consul"}},[s._v("#")]),s._v(" Consul")]),s._v(" "),n("p",[s._v("你需要 Consul Key/Value存储中设置一个Key保存包含所需配置的JSON值。例如，创建一个key"),n("code",[s._v("MY_CONSUL_KEY")]),s._v("将下面的值存入Consul key/value 存储：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('{\n    "port": 8080,\n    "hostname": "liwenzhou.com"\n}\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('viper.AddRemoteProvider("consul", "localhost:8500", "MY_CONSUL_KEY")\nviper.SetConfigType("json") // 需要显示设置成json\nerr := viper.ReadRemoteConfig()\n\nfmt.Println(viper.Get("port")) // 8080\nfmt.Println(viper.Get("hostname")) // liwenzhou.com\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h4",{attrs:{id:"firestore"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#firestore"}},[s._v("#")]),s._v(" Firestore")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('viper.AddRemoteProvider("firestore", "google-cloud-project-id", "collection/document")\nviper.SetConfigType("json") // 配置的格式: "json", "toml", "yaml", "yml"\nerr := viper.ReadRemoteConfig()\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("当然，你也可以使用"),n("code",[s._v("SecureRemoteProvider")]),s._v("。")]),s._v(" "),n("h4",{attrs:{id:"远程key-value存储示例-加密"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#远程key-value存储示例-加密"}},[s._v("#")]),s._v(" 远程Key/Value存储示例-加密")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('viper.AddSecureRemoteProvider("etcd","http://127.0.0.1:4001","/config/hugo.json","/etc/secrets/mykeyring.gpg")\nviper.SetConfigType("json") // 因为在字节流中没有文件扩展名，所以这里需要设置下类型。支持的扩展名有 "json", "toml", "yaml", "yml", "properties", "props", "prop", "env", "dotenv"\nerr := viper.ReadRemoteConfig()\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h4",{attrs:{id:"监控etcd中的更改-未加密"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#监控etcd中的更改-未加密"}},[s._v("#")]),s._v(" 监控etcd中的更改-未加密")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('// 或者你可以创建一个新的viper实例\nvar runtime_viper = viper.New()\n\nruntime_viper.AddRemoteProvider("etcd", "http://127.0.0.1:4001", "/config/hugo.yml")\nruntime_viper.SetConfigType("yaml") // 因为在字节流中没有文件扩展名，所以这里需要设置下类型。支持的扩展名有 "json", "toml", "yaml", "yml", "properties", "props", "prop", "env", "dotenv"\n\n// 第一次从远程读取配置\nerr := runtime_viper.ReadRemoteConfig()\n\n// 反序列化\nruntime_viper.Unmarshal(&runtime_conf)\n\n// 开启一个单独的goroutine一直监控远端的变更\ngo func(){\n\tfor {\n\t    time.Sleep(time.Second * 5) // 每次请求后延迟一下\n\n\t    // 目前只测试了etcd支持\n\t    err := runtime_viper.WatchRemoteConfig()\n\t    if err != nil {\n\t        log.Errorf("unable to read remote config: %v", err)\n\t        continue\n\t    }\n\n\t    // 将新配置反序列化到我们运行时的配置结构体中。你还可以借助channel实现一个通知系统更改的信号\n\t    runtime_viper.Unmarshal(&runtime_conf)\n\t}\n}()\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br")])]),n("h3",{attrs:{id:"从viper获取值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#从viper获取值"}},[s._v("#")]),s._v(" 从Viper获取值")]),s._v(" "),n("p",[s._v("在Viper中，有几种方法可以根据值的类型获取值。存在以下功能和方法:")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("Get(key string) : interface{}")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("GetBool(key string) : bool")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("GetFloat64(key string) : float64")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("GetInt(key string) : int")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("GetIntSlice(key string) : []int")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("GetString(key string) : string")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("GetStringMap(key string) : map[string]interface{}")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("GetStringMapString(key string) : map[string]string")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("GetStringSlice(key string) : []string")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("GetTime(key string) : time.Time")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("GetDuration(key string) : time.Duration")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("IsSet(key string) : bool")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("AllSettings() : map[string]interface{}")])])])]),s._v(" "),n("p",[s._v("需要认识到的一件重要事情是，每一个Get方法在找不到值的时候都会返回零值。为了检查给定的键是否存在，提供了"),n("code",[s._v("IsSet()")]),s._v("方法。")]),s._v(" "),n("p",[s._v("例如：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('viper.GetString("logfile") // 不区分大小写的设置和获取\nif viper.GetBool("verbose") {\n    fmt.Println("verbose enabled")\n}\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h4",{attrs:{id:"访问嵌套的键"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#访问嵌套的键"}},[s._v("#")]),s._v(" 访问嵌套的键")]),s._v(" "),n("p",[s._v("访问器方法也接受深度嵌套键的格式化路径。例如，如果加载下面的JSON文件：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('{\n    "host": {\n        "address": "localhost",\n        "port": 5799\n    },\n    "datastore": {\n        "metric": {\n            "host": "127.0.0.1",\n            "port": 3099\n        },\n        "warehouse": {\n            "host": "198.0.0.1",\n            "port": 2112\n        }\n    }\n}\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("Viper可以通过传入"),n("code",[s._v(".")]),s._v("分隔的路径来访问嵌套字段：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('GetString("datastore.metric.host") // (返回 "127.0.0.1")\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("这遵守上面建立的优先规则；搜索路径将遍历其余配置注册表，直到找到为止。(译注：因为Viper支持从多种配置来源，例如磁盘上的配置文件>命令行标志位>环境变量>远程Key/Value存储>默认值，我们在查找一个配置的时候如果在当前配置源中没找到，就会继续从后续的配置源查找，直到找到为止。)")]),s._v(" "),n("p",[s._v("例如，在给定此配置文件的情况下，"),n("code",[s._v("datastore.metric.host")]),s._v("和"),n("code",[s._v("datastore.metric.port")]),s._v("均已定义（并且可以被覆盖）。如果另外在默认值中定义了"),n("code",[s._v("datastore.metric.protocol")]),s._v("，Viper也会找到它。")]),s._v(" "),n("p",[s._v("然而，如果"),n("code",[s._v("datastore.metric")]),s._v("被直接赋值覆盖（被flag，环境变量，"),n("code",[s._v("set()")]),s._v("方法等等…），那么"),n("code",[s._v("datastore.metric")]),s._v("的所有子键都将变为未定义状态，它们被高优先级配置级别“遮蔽”（shadowed）了。")]),s._v(" "),n("p",[s._v("最后，如果存在与分隔的键路径匹配的键，则返回其值。例如：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('{\n    "datastore.metric.host": "0.0.0.0",\n    "host": {\n        "address": "localhost",\n        "port": 5799\n    },\n    "datastore": {\n        "metric": {\n            "host": "127.0.0.1",\n            "port": 3099\n        },\n        "warehouse": {\n            "host": "198.0.0.1",\n            "port": 2112\n        }\n    }\n}\n\nGetString("datastore.metric.host") // 返回 "0.0.0.0"\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("h4",{attrs:{id:"提取子树"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#提取子树"}},[s._v("#")]),s._v(" 提取子树")]),s._v(" "),n("p",[s._v("从Viper中提取子树。")]),s._v(" "),n("p",[s._v("例如，"),n("code",[s._v("viper")]),s._v("实例现在代表了以下配置：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("app:\n  cache1:\n    max-items: 100\n    item-size: 64\n  cache2:\n    max-items: 200\n    item-size: 80\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("执行后：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('subv := viper.Sub("app.cache1")\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("code",[s._v("subv")]),s._v("现在就代表：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("max-items: 100\nitem-size: 64\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("假设我们现在有这么一个函数：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("func NewCache(cfg *Viper) *Cache {...}\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("它基于"),n("code",[s._v("subv")]),s._v("格式的配置信息创建缓存。现在，可以轻松地分别创建这两个缓存，如下所示：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('cfg1 := viper.Sub("app.cache1")\ncache1 := NewCache(cfg1)\n\ncfg2 := viper.Sub("app.cache2")\ncache2 := NewCache(cfg2)\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h4",{attrs:{id:"反序列化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#反序列化"}},[s._v("#")]),s._v(" 反序列化")]),s._v(" "),n("p",[s._v("你还可以选择将所有或特定的值解析到结构体、map等。")]),s._v(" "),n("p",[s._v("有两种方法可以做到这一点：")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("Unmarshal(rawVal interface{}) : error")])])]),s._v(" "),n("li",[n("p",[n("code",[s._v("UnmarshalKey(key string, rawVal interface{}) : error")])])])]),s._v(" "),n("p",[s._v("举个例子：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('type config struct {\n\tPort int\n\tName string\n\tPathMap string `mapstructure:"path_map"`\n}\n\nvar C config\n\nerr := viper.Unmarshal(&C)\nif err != nil {\n\tt.Fatalf("unable to decode into struct, %v", err)\n}\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("如果你想要解析那些键本身就包含"),n("code",[s._v(".")]),s._v("(默认的键分隔符）的配置，你需要修改分隔符：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('v := viper.NewWithOptions(viper.KeyDelimiter("::"))\n\nv.SetDefault("chart::values", map[string]interface{}{\n    "ingress": map[string]interface{}{\n        "annotations": map[string]interface{}{\n            "traefik.frontend.rule.type":                 "PathPrefix",\n            "traefik.ingress.kubernetes.io/ssl-redirect": "true",\n        },\n    },\n})\n\ntype config struct {\n\tChart struct{\n        Values map[string]interface{}\n    }\n}\n\nvar C config\n\nv.Unmarshal(&C)\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("p",[s._v("Viper还支持解析到嵌入的结构体：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('/*\nExample config:\n\nmodule:\n    enabled: true\n    token: 89h3f98hbwf987h3f98wenf89ehf\n*/\ntype config struct {\n\tModule struct {\n\t\tEnabled bool\n\n\t\tmoduleConfig `mapstructure:",squash"`\n\t}\n}\n\n// moduleConfig could be in a module specific package\ntype moduleConfig struct {\n\tToken string\n}\n\nvar C config\n\nerr := viper.Unmarshal(&C)\nif err != nil {\n\tt.Fatalf("unable to decode into struct, %v", err)\n}\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("p",[s._v("Viper在后台使用"),n("a",{attrs:{href:"https://github.com/mitchellh/mapstructure",target:"_blank",rel:"noopener noreferrer"}},[s._v("github.com/mitchellh/mapstructure"),n("OutboundLink")],1),s._v("来解析值，其默认情况下使用"),n("code",[s._v("mapstructure")]),s._v("tag。")]),s._v(" "),n("p",[n("strong",[s._v("注意")]),s._v(" 当我们需要将viper读取的配置反序列到我们定义的结构体变量中时，一定要使用"),n("code",[s._v("mapstructure")]),s._v("tag哦！")]),s._v(" "),n("h4",{attrs:{id:"序列化成字符串"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#序列化成字符串"}},[s._v("#")]),s._v(" 序列化成字符串")]),s._v(" "),n("p",[s._v("你可能需要将viper中保存的所有设置序列化到一个字符串中，而不是将它们写入到一个文件中。你可以将自己喜欢的格式的序列化器与"),n("code",[s._v("AllSettings()")]),s._v("返回的配置一起使用。")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('import (\n    yaml "gopkg.in/yaml.v2"\n    // ...\n)\n\nfunc yamlStringSettings() string {\n    c := viper.AllSettings()\n    bs, err := yaml.Marshal(c)\n    if err != nil {\n        log.Fatalf("unable to marshal config to YAML: %v", err)\n    }\n    return string(bs)\n}\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h3",{attrs:{id:"使用单个还是多个viper实例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用单个还是多个viper实例"}},[s._v("#")]),s._v(" 使用单个还是多个Viper实例?")]),s._v(" "),n("p",[s._v("Viper是开箱即用的。你不需要配置或初始化即可开始使用Viper。由于大多数应用程序都希望使用单个中央存储库管理它们的配置信息，所以viper包提供了这个功能。它类似于单例模式。")]),s._v(" "),n("p",[s._v("在上面的所有示例中，它们都以其单例风格的方法演示了如何使用viper。")]),s._v(" "),n("h4",{attrs:{id:"使用多个viper实例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用多个viper实例"}},[s._v("#")]),s._v(" 使用多个viper实例")]),s._v(" "),n("p",[s._v("你还可以在应用程序中创建许多不同的viper实例。每个都有自己独特的一组配置和值。每个人都可以从不同的配置文件，key value存储区等读取数据。每个都可以从不同的配置文件、键值存储等中读取。viper包支持的所有功能都被镜像为viper实例的方法。")]),s._v(" "),n("p",[s._v("例如：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('x := viper.New()\ny := viper.New()\n\nx.SetDefault("ContentDir", "content")\ny.SetDefault("ContentDir", "foobar")\n\n//...\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("当使用多个viper实例时，由用户来管理不同的viper实例。")]),s._v(" "),n("h3",{attrs:{id:"使用viper示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用viper示例"}},[s._v("#")]),s._v(" 使用Viper示例")]),s._v(" "),n("p",[s._v("假设我们的项目现在有一个"),n("code",[s._v("./conf/config.yaml")]),s._v("配置文件，内容如下：")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('port: 8123\nversion: "v1.2.3"\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("接下来通过示例代码演示两种在项目中使用"),n("code",[s._v("viper")]),s._v("管理项目配置信息的方式。")]),s._v(" "),n("h4",{attrs:{id:"直接使用viper管理配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#直接使用viper管理配置"}},[s._v("#")]),s._v(" 直接使用viper管理配置")]),s._v(" "),n("p",[s._v("这里用一个demo演示如何在gin框架搭建的web项目中使用"),n("code",[s._v("viper")]),s._v("，使用viper加载配置文件中的信息，并在代码中直接使用"),n("code",[s._v("viper.GetXXX()")]),s._v("方法获取对应的配置值。")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('package main\n\nimport (\n\t"fmt"\n\t"net/http"\n\n\t"github.com/gin-gonic/gin"\n\t"github.com/spf13/viper"\n)\n\nfunc main() {\n\tviper.SetConfigFile("./conf/config.yaml") // 指定配置文件路径\n\terr := viper.ReadInConfig()        // 读取配置信息\n\tif err != nil {                    // 读取配置信息失败\n\t\tpanic(fmt.Errorf("Fatal error config file: %s \\n", err))\n\t}\n\n\t// 监控配置文件变化\n\tviper.WatchConfig()\n\n\tr := gin.Default()\n\t// 访问/version的返回值会随配置文件的变化而变化\n\tr.GET("/version", func(c *gin.Context) {\n\t\tc.String(http.StatusOK, viper.GetString("version"))\n\t})\n\n\tif err := r.Run(\n\t\tfmt.Sprintf(":%d", viper.GetInt("port"))); err != nil {\n\t\tpanic(err)\n\t}\n}\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br")])]),n("h4",{attrs:{id:"使用结构体变量保存配置信息"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用结构体变量保存配置信息"}},[s._v("#")]),s._v(" 使用结构体变量保存配置信息")]),s._v(" "),n("p",[s._v("除了上面的用法外，我们还可以在项目中定义与配置文件对应的结构体，"),n("code",[s._v("viper")]),s._v("加载完配置信息后使用结构体变量保存配置信息。")]),s._v(" "),n("div",{staticClass:"language-Plain Text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('package main\n\nimport (\n\t"fmt"\n\t"net/http"\n\n\t"github.com/fsnotify/fsnotify"\n\n\t"github.com/gin-gonic/gin"\n\t"github.com/spf13/viper"\n)\n\ntype Config struct {\n\tPort    int    `mapstructure:"port"`\n\tVersion string `mapstructure:"version"`\n}\n\nvar Conf = new(Config)\n\nfunc main() {\n\tviper.SetConfigFile("./conf/config.yaml") // 指定配置文件路径\n\terr := viper.ReadInConfig()               // 读取配置信息\n\tif err != nil {                           // 读取配置信息失败\n\t\tpanic(fmt.Errorf("Fatal error config file: %s \\n", err))\n\t}\n\t// 将读取的配置信息保存至全局变量Conf\n\tif err := viper.Unmarshal(Conf); err != nil {\n\t\tpanic(fmt.Errorf("unmarshal conf failed, err:%s \\n", err))\n\t}\n\t// 监控配置文件变化\n\tviper.WatchConfig()\n\t// 注意！！！配置文件发生变化后要同步到全局变量Conf\n\tviper.OnConfigChange(func(in fsnotify.Event) {\n\t\tfmt.Println("夭寿啦~配置文件被人修改啦...")\n\t\tif err := viper.Unmarshal(Conf); err != nil {\n\t\t\tpanic(fmt.Errorf("unmarshal conf failed, err:%s \\n", err))\n\t\t}\n\t})\n\n\tr := gin.Default()\n\t// 访问/version的返回值会随配置文件的变化而变化\n\tr.GET("/version", func(c *gin.Context) {\n\t\tc.String(http.StatusOK, Conf.Version)\n\t})\n\n\tif err := r.Run(fmt.Sprintf(":%d", Conf.Port)); err != nil {\n\t\tpanic(err)\n\t}\n}\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br")])]),n("h3",{attrs:{id:"参考链接"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[s._v("#")]),s._v(" 参考链接")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/spf13/viper/blob/master/README.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/spf13/viper/blob/master/README.md"),n("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=t.exports}}]);